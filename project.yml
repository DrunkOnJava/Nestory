name: Nestory
# üèóÔ∏è TCA ARCHITECTURE MIGRATION NOTES (August 20, 2025)
# - Migrated to The Composable Architecture for advanced state management
# - Added swift-composable-architecture dependency (v1.15.0+)
# - All new features MUST use TCA patterns (see CLAUDE.md for guidance)
# - iPhone 16 Pro Max is the standard simulator target
options:
  bundleIdPrefix: com.drunkonjava.nestory
  deploymentTarget:
    iOS: 17.0
  developmentLanguage: en
  xcodeVersion: 15.0
  createIntermediateGroups: true
  generateEmptyDirectories: true

attributes:
  ORGANIZATIONNAME: Nestory
  DEVELOPMENT_TEAM: 2VXBQV4XC9

configs:
  Debug:
    xcconfig: Config/Debug.xcconfig
  Release:
    xcconfig: Config/Release.xcconfig

settings:
  base:
    IPHONEOS_DEPLOYMENT_TARGET: 17.0
    SWIFT_VERSION: 6.0
    DEVELOPMENT_TEAM: 2VXBQV4XC9
    CODE_SIGN_STYLE: Automatic
    CURRENT_PROJECT_VERSION: 4
    MARKETING_VERSION: 1.0.1
    ENABLE_BITCODE: NO
    DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
    ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
    # Build Performance Optimizations
    SWIFT_COMPILATION_MODE: wholemodule
    SWIFT_OPTIMIZATION_LEVEL: -Onone
    ENABLE_MODULE_VERIFIER: NO
    VALIDATE_PRODUCT: NO
    # Swift Compiler Performance  
    SWIFT_ENABLE_BATCH_MODE: YES
    SWIFT_DISABLE_SAFETY_CHECKS: NO
    # Parallel Processing
    SWIFT_ENABLE_INCREMENTAL_COMPILATION: YES
  configs:
    Debug:
      SWIFT_STRICT_CONCURRENCY: complete
      SWIFT_TREAT_WARNINGS_AS_ERRORS: NO
      OTHER_SWIFT_FLAGS: "-Xfrontend -disable-availability-checking -suppress-warnings -enable-experimental-feature Macros"
      DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
      SWIFT_MACRO_VALIDATION_MODE: disabled
      # Debug Build Performance
      SWIFT_COMPILATION_MODE: singlefile
      SWIFT_OPTIMIZATION_LEVEL: -Onone
      GCC_OPTIMIZATION_LEVEL: 0
      SWIFT_ACTIVE_COMPILATION_CONDITIONS: DEBUG
      ONLY_ACTIVE_ARCH: YES
      # Skip time-consuming validations in debug
      ENABLE_MODULE_VERIFIER: NO
      VALIDATE_PRODUCT: NO
    Release:
      SWIFT_STRICT_CONCURRENCY: complete
      DEBUG_INFORMATION_FORMAT: dwarf-with-dsym
      OTHER_SWIFT_FLAGS: "-enable-experimental-feature Macros"
      SWIFT_MACRO_VALIDATION_MODE: disabled
      # Release Build Performance  
      SWIFT_COMPILATION_MODE: wholemodule
      SWIFT_OPTIMIZATION_LEVEL: -O
      GCC_OPTIMIZATION_LEVEL: s
      # Enable all optimizations for release
      ENABLE_MODULE_VERIFIER: YES
      VALIDATE_PRODUCT: YES

packages:
  # TCA MIGRATION: Added for 6-layer architecture (ADR-0014)
  # The Composable Architecture enables sophisticated state management
  # Required for: Apple Framework integration, complex workflows, testability
  swift-composable-architecture:
    url: https://github.com/pointfreeco/swift-composable-architecture
    majorVersion: 1.22.0
  
  # UI TESTING FRAMEWORK DEPENDENCIES
  swift-snapshot-testing:
    url: https://github.com/pointfreeco/swift-snapshot-testing
    majorVersion: 1.12.0
  swift-collections:
    url: https://github.com/apple/swift-collections
    majorVersion: 1.0.0

targets:
  Nestory:
    type: application
    platform: iOS
    deploymentTarget: 17.0
    
    # Build phase scripts for metrics collection
    preBuildScripts:
      - name: "üìä Start Build Metrics Timer"
        script: |
          echo "$(date +%s)" > /tmp/nestory_build_start_time
          echo "Starting build metrics collection..."
        shell: /bin/bash
        runOnlyWhenInstalling: false
    
    postBuildScripts:
      - name: "üìä Capture Build Metrics"
        script: |
          export BUILD_START_TIME=$(cat /tmp/nestory_build_start_time 2>/dev/null || echo $(date +%s))
          export SCHEME_NAME="${SCHEME_NAME:-Nestory-Dev}"
          export CONFIGURATION="${CONFIGURATION:-Debug}"
          export TARGET_NAME="${TARGET_NAME:-Nestory}"
          export BUILD_LOG_PATH="${BUILD_ROOT}/build.log"
          
          # Capture enhanced metrics with real error tracking
          "${SRCROOT}/Scripts/CI/enhanced-build-metrics.sh" &
          
          # Capture detailed build errors from project's DerivedData path
          PROJECT_BUILD_DIR="${SRCROOT}/.build"
          if [ -d "$PROJECT_BUILD_DIR" ]; then
            # Find the most recent build log in project's build directory
            LATEST_LOG=$(find "$PROJECT_BUILD_DIR" -name "*.xcactivitylog" -mmin -5 2>/dev/null | head -1)
            if [ -n "$LATEST_LOG" ]; then
              echo "Found build log: $LATEST_LOG"
              # Parse and send errors to dashboard
              gunzip -c "$LATEST_LOG" 2>/dev/null | \
                "${SRCROOT}/monitoring/scripts/xcode-error-collector.sh" parse /dev/stdin &
            fi
            
            # Also check for xcresult bundle in project build directory
            XCRESULT=$(find "$PROJECT_BUILD_DIR" -name "*.xcresult" -maxdepth 2 2>/dev/null | head -1)
            if [ -n "$XCRESULT" ]; then
              echo "Found xcresult bundle: $XCRESULT"
              "${SRCROOT}/monitoring/scripts/xcode-error-collector.sh" xcresult "$XCRESULT" &
            fi
          fi
          
          echo "Build metrics and errors captured and sent to dashboard"
        shell: /bin/bash
        runOnlyWhenInstalling: false
    
    sources:
      # FAIL-FAST BUILD ORDER: Foundation ‚Üí Infrastructure ‚Üí Services ‚Üí UI ‚Üí Features ‚Üí App-Main
      # This ensures architectural violations and critical errors are caught immediately
      
      # üèóÔ∏è FOUNDATION LAYER (Build First - No Dependencies)
      - path: Foundation/Models
      - path: Foundation/Core  
      - path: Foundation/Utils
      - path: Config/FeatureFlags.swift
      - path: Config/EnvironmentConfiguration.swift
      
      # üîß INFRASTRUCTURE LAYER (Build Second - Foundation Dependencies Only)
      - path: Infrastructure/Storage
      - path: Infrastructure/Cache
      - path: Infrastructure/Security
      - path: Infrastructure/Actors
      - path: Infrastructure/Network
      - path: Infrastructure/Monitoring
      - path: Infrastructure/Camera
      - path: Infrastructure/HotReload
        excludes:
          - "*.swift"
          
      # ‚öôÔ∏è SERVICES LAYER (Build Third - Core Business Logic)
      - path: Services
      - path: Services/ImportExportService  # Critical - causes many downstream failures
      - path: Services/NotificationService  # Critical - complex concurrency issues
      - path: Services/BarcodeScannerService
      - path: Services/CloudBackupService
      - path: Services/InsuranceExport
      - path: Services/InsuranceReport
      - path: Services/ReceiptOCR
      - path: Services/ClaimExport
      - path: Services/InsuranceClaim
      - path: Services/InsuranceClaim/ClaimDocumentGenerator
      # Modularized Services (Post-Phase 1-4 Refactoring)
      - path: Services/WarrantyTrackingService  # Modularized warranty tracking components
      - path: Services/ClaimTracking  # Modularized claim tracking operations and models
      - path: Services/InsuranceClaim/Templates/Sections  # Template section components
      
      # üé® UI LAYER (Build Fourth - Shared Components)
      - path: UI/UI-Core
      - path: UI/UI-Components
      
      # üéØ FEATURES LAYER (Build Fifth - TCA State Management)
      - path: Features
      # Modularized Features (Post-Phase 1-4 Refactoring)
      - path: Features/Settings/Components  # Modularized settings feature components
      - path: Features/Search/Components  # Modularized search feature components
      
      # üì± APP LAYER (Build Last - Depends on Everything)
      - path: App-Main
        excludes:
          - "SearchView-Old.swift"
          - "**/README.md"  # Exclude documentation files from build
      # Modularized App-Main Components (Post-Phase 1-4 Refactoring)
      # Damage Assessment Modular Components
      - path: App-Main/DamageAssessmentViews/RepairCostEstimation/Cards
      - path: App-Main/DamageAssessmentViews/RepairCostEstimation/Components
      - path: App-Main/DamageAssessmentViews/RepairCostEstimation/Sections
      - path: App-Main/DamageAssessmentViews/DamageAssessmentReport/Components
      - path: App-Main/DamageAssessmentViews/DamageAssessmentReport/Sections
      - path: App-Main/DamageAssessmentViews/ReportSections
      - path: App-Main/DamageAssessmentViews/DamageSeverityAssessment/Components
      - path: App-Main/DamageAssessmentViews/DamageSeverityAssessment/Sections
      - path: App-Main/DamageAssessmentViews/PhotoComparison  # Phase 4: BeforeAfterPhotoComparisonView modularization
        excludes:
          - "README.md"
      - path: App-Main/DamageAssessmentViews/PhotoComparison/Components
      # Claim Package Assembly Modular Components
      - path: App-Main/ClaimPackageAssemblyView/Steps  # Phase 4: ClaimPackageAssemblySteps modularization
      - path: App-Main/ClaimSubmission
      - path: App-Main/InsuranceClaim/Components
      # Warranty Tracking Modular Components  
      - path: App-Main/WarrantyViews/WarrantyTracking/Sheets  # Phase 4: WarrantyTrackingSheets modularization
        excludes:
          - "README.md"
      - path: App-Main/WarrantyViews/WarrantyTracking/Sheets/AutoDetection
      - path: App-Main/WarrantyViews/WarrantyTracking/Sheets/ManualForm
      - path: App-Main/WarrantyViews/WarrantyTracking/Sheets/Extension
      - path: App-Main/WarrantyViews/WarrantyTracking/Sheets/Types
      - path: App-Main/WarrantyViews/WarrantyTracking/Sheets/Components
      
    resources:
      - path: App-Main/Assets.xcassets
        buildPhase: resources
      - path: App-Main/Preview Content/PreviewAssets.xcassets
        buildPhase: resources
        
    settings:
      base:
        PRODUCT_NAME: Nestory
        PRODUCT_BUNDLE_IDENTIFIER: com.drunkonjava.nestory.dev
        INFOPLIST_FILE: App-Main/Info.plist
        CODE_SIGN_ENTITLEMENTS: App-Main/Nestory.entitlements
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIcon
        ASSETCATALOG_COMPILER_INCLUDE_ALL_APPICON_ASSETS: YES
        ENABLE_PREVIEWS: YES
        SWIFT_UPCOMING_FEATURE_CONCURRENCY: YES
        SWIFT_UPCOMING_FEATURE_EXISTENTIAL_ANY: YES
    SWIFT_EXEC: /usr/bin/xcrun swift
    ENABLE_TESTABILITY: YES
        
    dependencies:
      - sdk: SwiftData.framework
      - sdk: CloudKit.framework
      - package: swift-composable-architecture
        product: ComposableArchitecture

  NestoryUITests:
    type: bundle.ui-testing
    platform: iOS
    deploymentTarget: 17.0
    sources:
      - NestoryUITests
    dependencies:
      - target: Nestory
      - package: swift-snapshot-testing
        product: SnapshotTesting
      - package: swift-collections
        product: Collections
      - package: swift-composable-architecture
        product: ComposableArchitecture
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: com.drunkonjava.nestory.UITests
        TEST_TARGET_NAME: Nestory
        GENERATE_INFOPLIST_FILE: YES
        SWIFT_VERSION: 6.0
        SWIFT_STRICT_CONCURRENCY: minimal
        SWIFT_TREAT_WARNINGS_AS_ERRORS: NO
        # Enterprise UI Testing Framework Settings
        ENABLE_TESTING_SEARCH_PATHS: YES
        UI_TEST_BUNDLE_ID: com.drunkonjava.nestory.UITests
        UI_TEST_FRAMEWORK_ENABLED: YES
  
  # PERFORMANCE UI TESTS TARGET
  NestoryPerformanceUITests:
    type: bundle.ui-testing
    platform: iOS
    deploymentTarget: 17.0
    sources:
      - NestoryUITests/PerformanceTests
      - NestoryUITests/Core/Framework
      - NestoryUITests/Base
      - NestoryUITests/Extensions
      - NestoryUITests/Helpers
    dependencies:
      - target: Nestory
      - package: swift-snapshot-testing
        product: SnapshotTesting
      - package: swift-collections
        product: Collections
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: com.drunkonjava.nestory.PerformanceUITests
        TEST_TARGET_NAME: Nestory
        GENERATE_INFOPLIST_FILE: YES
        SWIFT_VERSION: 6.0
        SWIFT_STRICT_CONCURRENCY: minimal
        SWIFT_TREAT_WARNINGS_AS_ERRORS: NO
        ENABLE_TESTING_SEARCH_PATHS: YES
        UI_TEST_PERFORMANCE_MODE: YES
        PERFORMANCE_TEST_TIMEOUT: 300
  
  # ACCESSIBILITY UI TESTS TARGET
  NestoryAccessibilityUITests:
    type: bundle.ui-testing
    platform: iOS
    deploymentTarget: 17.0
    sources:
      - NestoryUITests/AccessibilityTests
      - NestoryUITests/Core/Framework
      - NestoryUITests/Base
      - NestoryUITests/Extensions
      - NestoryUITests/Helpers
    dependencies:
      - target: Nestory
      - package: swift-snapshot-testing
        product: SnapshotTesting
    settings:
      base:
        PRODUCT_BUNDLE_IDENTIFIER: com.drunkonjava.nestory.AccessibilityUITests
        TEST_TARGET_NAME: Nestory
        GENERATE_INFOPLIST_FILE: YES
        SWIFT_VERSION: 6.0
        SWIFT_STRICT_CONCURRENCY: minimal
        SWIFT_TREAT_WARNINGS_AS_ERRORS: NO
        ENABLE_TESTING_SEARCH_PATHS: YES
        ACCESSIBILITY_TEST_MODE: YES

schemes:
  Nestory-Dev:
    build:
      targets:
        Nestory: all
    run:
      config: Debug
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory.dev
        NESTORY_ENVIRONMENT: development
        API_BASE_URL: https://api-dev.nestory.app
        FX_API_ENDPOINT: https://fx-dev.nestory.app
    test:
      config: Debug
      targets:
        - NestoryUITests
      gatherCoverageData: true
      parallelizable: false
      commandLineArguments:
        - --ui-testing
        - --demo-data
        - --comprehensive-testing
    profile:
      config: Debug
    analyze:
      config: Debug
    archive:
      config: Release

  # COMPREHENSIVE UI WIRING SCHEME
  Nestory-UIWiring:
    build:
      targets:
        Nestory: all
        NestoryUITests: all
    run:
      config: Debug
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory.dev
        NESTORY_ENVIRONMENT: development
        API_BASE_URL: https://api-dev.nestory.app
        FX_API_ENDPOINT: https://fx-dev.nestory.app
        UI_WIRING_TEST_MODE: "true"
        UI_TEST_FRAMEWORK_ENABLED: "true"
    test:
      config: Debug
      targets:
        - name: NestoryUITests
          parallelizable: false
          randomExecutionOrder: false
      gatherCoverageData: true
      onlyTestIdentifiers:
        - NestoryUITests/ComprehensiveUIWiringTest/testCompleteUIWiring
        - NestoryUITests/BasicScreenshotTest/testBasicAppScreenshots
        - NestoryUITests/ComprehensiveFlowDemonstrationTest
      commandLineArguments:
        - --ui-testing
        - --demo-data  
        - --comprehensive-testing
        - --wiring-validation
        - --framework-validation
      environmentVariables:
        UI_TEST_SCREENSHOT_DIR: ~/Desktop/NestoryUIWiringScreenshots
        UI_TEST_ENABLE_VALIDATION: "true"
        UI_TEST_FRAMEWORK_MODE: "comprehensive"
        TEST_EXECUTION_TIMEOUT: "300"
    profile:
      config: Debug
    analyze:
      config: Debug
    archive:
      config: Release
  
  # PERFORMANCE TESTING SCHEME
  Nestory-Performance:
    build:
      targets:
        Nestory: all
        NestoryPerformanceUITests: all
    run:
      config: Release
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory.dev
        NESTORY_ENVIRONMENT: performance
        PERFORMANCE_TESTING_MODE: "true"
    test:
      config: Release
      targets:
        - name: NestoryPerformanceUITests
          parallelizable: true
          randomExecutionOrder: false
      gatherCoverageData: false
      commandLineArguments:
        - --performance-testing
        - --load-testing
        - --memory-profiling
      environmentVariables:
        PERFORMANCE_TEST_TIMEOUT: "300"
        MEMORY_TEST_THRESHOLD: "100MB"
        CPU_TEST_THRESHOLD: "80%"
    profile:
      config: Release
    analyze:
      config: Release
    archive:
      config: Release
  
  # ACCESSIBILITY TESTING SCHEME
  Nestory-Accessibility:
    build:
      targets:
        Nestory: all
        NestoryAccessibilityUITests: all
    run:
      config: Debug
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory.dev
        NESTORY_ENVIRONMENT: accessibility
        ACCESSIBILITY_TESTING_MODE: "true"
    test:
      config: Debug
      targets:
        - name: NestoryAccessibilityUITests
          parallelizable: false
          randomExecutionOrder: false
      gatherCoverageData: true
      commandLineArguments:
        - --accessibility-testing
        - --voice-over-testing
        - --contrast-testing
      environmentVariables:
        ACCESSIBILITY_TEST_MODE: "comprehensive"
        VOICE_OVER_ENABLED: "true"
        CONTRAST_TESTING_ENABLED: "true"
    profile:
      config: Debug
    analyze:
      config: Debug
    archive:
      config: Release
  
  # SMOKE TESTING SCHEME
  Nestory-Smoke:
    build:
      targets:
        Nestory: all
        NestoryUITests: all
    run:
      config: Debug
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory.dev
        NESTORY_ENVIRONMENT: smoke
        SMOKE_TESTING_MODE: "true"
    test:
      config: Debug
      targets:
        - name: NestoryUITests
          parallelizable: true
          randomExecutionOrder: false
      gatherCoverageData: false
      onlyTestIdentifiers:
        - NestoryUITests/SmokeTests
      commandLineArguments:
        - --smoke-testing
        - --quick-validation
      environmentVariables:
        SMOKE_TEST_TIMEOUT: "60"
        QUICK_VALIDATION_MODE: "true"
    profile:
      config: Debug
    analyze:
      config: Debug
    archive:
      config: Debug

  Nestory-Prod:
    build:
      targets:
        Nestory: all
    run:
      config: Release
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory
        NESTORY_ENVIRONMENT: production
        API_BASE_URL: https://api.nestory.app
        FX_API_ENDPOINT: https://fx.nestory.app
    test:
      config: Release
      targets:
        - NestoryUITests
    profile:
      config: Release
    analyze:
      config: Release
    archive:
      config: Release

  Nestory-Staging:
    build:
      targets:
        Nestory: all
    run:
      config: Release
      environmentVariables:
        CLOUDKIT_CONTAINER: iCloud.com.drunkonjava.nestory.staging
        NESTORY_ENVIRONMENT: staging
        API_BASE_URL: https://api-staging.nestory.app
        FX_API_ENDPOINT: https://fx-staging.nestory.app
    test:
      config: Release
      targets:
        - NestoryUITests
    profile:
      config: Release
    analyze:
      config: Release
    archive:
      config: Release
