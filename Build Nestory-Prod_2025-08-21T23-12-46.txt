
Showing Recent Errors Only

Build target Nestory of project Nestory with configuration Release
note: Disabling previews because SWIFT_VERSION is set and SWIFT_OPTIMIZATION_LEVEL=-O, expected -Onone (in target 'Nestory' from project 'Nestory')


SwiftCompile normal x86_64 Compiling\ AboutSupportSettingsView.swift,\ AddItemView.swift,\ AdvancedSearchView.swift,\ AdvancedSearchViewModel.swift,\ AnalyticsCharts.swift,\ AnalyticsCurrencyOperations.swift,\ AnalyticsDashboardView.swift,\ AnalyticsDataProvider.swift,\ AnalyticsFeature.swift,\ AnalyticsModels.swift,\ AnalyticsService.swift,\ AnalyticsServiceError.swift,\ AppMetadataService.swift,\ AppStoreConnectClient.swift,\ AppStoreConnectConfiguration.swift,\ AppStoreConnectOrchestrator.swift,\ AppStoreConnectTypes.swift,\ AppVersionModels.swift,\ AppVersionOperations.swift,\ AppVersionService.swift,\ AppearanceSettingsView.swift,\ AppleFrameworksReceiptProcessor.swift,\ AuthService.swift,\ AuthTypes.swift,\ BackupDataTransformer.swift,\ BackupMetadata.swift,\ BackupModels.swift,\ BarcodeScannerService.swift,\ BarcodeScannerView.swift,\ BeforeAfterPhotoComparisonView.swift,\ BundleConfiguration.swift,\ BusinessConstants.swift,\ CSVOperations.swift,\ Cache.swift,\ CacheConstants.swift,\ CacheEncoder.swift,\ CacheSizeManager.swift,\ CameraScannerView.swift,\ CameraScannerViewController.swift,\ CategoriesView.swift,\ Category.swift,\ CategoryClassifier.swift,\ ClaimContentGenerator.swift,\ ClaimDocumentCore.swift,\ ClaimDocumentGenerator.swift,\ ClaimDocumentHelpers.swift,\ ClaimDocumentProcessor.swift,\ ClaimEmailService.swift,\ ClaimExportCore.swift,\ ClaimExportFormatters.swift,\ ClaimExportModels.swift,\ ClaimExportService.swift,\ ClaimExportValidators.swift,\ ClaimExportView.swift,\ ClaimHTMLGenerator.swift,\ ClaimInfo.swift,\ ClaimJSONGenerator.swift,\ ClaimPDFGenerator.swift,\ ClaimPackageAssemblerService.swift,\ ClaimPackageAssemblyComponents.swift,\ ClaimPackageAssemblyCore.swift,\ ClaimPackageAssemblySteps.swift,\ ClaimPackageAssemblyView.swift,\ ClaimPackageCore.swift,\ ClaimPackageExporter.swift,\ ClaimPreviewView.swift,\ ClaimSpreadsheetGenerator.swift,\ ClaimSubmissionComponents.swift,\ ClaimSubmissionCore.swift,\ ClaimSubmissionSteps.swift,\ ClaimSubmissionView.swift,\ ClaimTemplateManager.swift,\ ClaimTrackingService.swift,\ ClaimValidationService.swift,\ CloudBackupService.swift,\ CloudBackupSettingsView.swift,\ CloudKitAssetManager.swift,\ CloudKitBackupOperations.swift,\ CloudStorageServices.swift,\ ConditionModels.swift,\ ConditionNotesView.swift,\ ConditionPhotoManagementView.swift,\ ConditionSelectionView.swift,\ Constants.swift,\ CostEstimation.swift,\ CryptoBox.swift,\ CurrencyService.swift,\ CurrencySettingsView.swift,\ CurrencyUtils.swift,\ DamageAssessmentComponents.swift,\ DamageAssessmentCore.swift,\ DamageAssessmentModels.swift,\ DamageAssessmentReportView.swift,\ DamageAssessmentService.swift,\ DamageAssessmentSteps.swift,\ DamageAssessmentWorkflowView.swift,\ DamageSeverityAssessmentView.swift,\ DangerZoneSettingsView.swift,\ DataFormatHelpers.swift,\ DataStorageSettingsView.swift,\ DateUtils.swift,\ DependencyKeys.swift,\ DiskCache.swift,\ DocumentManagementView.swift,\ DocumentationLevel.swift,\ EditItemView.swift,\ EmptyStateView.swift,\ EncryptionDeclarationService.swift,\ Endpoint.swift,\ EnhancedAnalyticsSummaryView.swift,\ EnhancedInsightsView.swift,\ EnhancedReceiptDataView.swift,\ EnvironmentConfiguration.swift,\ ErrorLogger.swift,\ ErrorRecoveryStrategy.swift,\ Errors.swift,\ ExportFormat.swift,\ ExportOptionsView.swift,\ ExportService.swift,\ ExportTypes.swift,\ Extensions.swift,\ FeatureFlags.swift,\ FileStore.swift,\ FoundationLogger.swift,\ GeneralSettingsView.swift,\ HTMLTemplateGenerator.swift,\ HTTPClient.swift,\ Identifiers.swift,\ ImageIO.swift,\ ImportExportModels.swift,\ ImportExportService.swift,\ ImportExportSettingsView.swift,\ InsightsView.swift,\ InsuranceClaimCore.swift,\ InsuranceClaimModels.swift,\ InsuranceClaimService.swift,\ InsuranceClaimValidation.swift,\ InsuranceClaimView.swift,\ InsuranceExportOptionsView.swift,\ InsuranceExportService.swift,\ InsuranceReportData.swift,\ InsuranceReportOptionsView.swift,\ InsuranceReportService.swift,\ InsuranceTypes.swift,\ InventoryFeature.swift,\ InventoryListView.swift,\ InventoryListViewModel.swift,\ InventoryService.swift,\ InventoryView.swift,\ Item.swift,\ ItemCard.swift,\ ItemConditionView.swift,\ ItemDetailFeature.swift,\ ItemDetailView.swift,\ ItemEditFeature.swift,\ JSONOperations.swift,\ KeychainStore.swift,\ LiveAnalyticsService.swift,\ LiveBarcodeScannerService.swift,\ LiveCloudBackupService.swift,\ LiveImportExportService.swift,\ LiveNotificationService.swift,\ LiveReceiptScannerView.swift,\ LiveWarrantyTrackingService.swift,\ LocationManagementView.swift,\ Log.swift,\ LogContext.swift,\ LogSpecializedOperations.swift,\ MLReceiptProcessor.swift,\ ManualBarcodeEntryView.swift,\ MediaUploadModels.swift,\ MediaUploadOperations.swift,\ MediaUploadService.swift,\ MemoryCache.swift,\ MetricKitCollector.swift,\ MockAnalyticsService.swift,\ MockBarcodeScannerService.swift,\ MockCloudBackupService.swift,\ MockImportExportService.swift,\ MockNotificationService.swift,\ Money.swift,\ NestoryApp.swift,\ NetworkClient.swift,\ NetworkConstants.swift,\ NetworkError.swift,\ NonEmptyString.swift,\ NotificationActor.swift,\ NotificationAdvancedOperations.swift,\ NotificationAnalytics.swift,\ NotificationAnalyticsView.swift,\ NotificationBackgroundProcessor.swift,\ NotificationFrequencyView.swift,\ NotificationManagement.swift,\ NotificationOtherOperations.swift,\ NotificationPersistence.swift,\ NotificationScheduler.swift,\ NotificationSchedulingTypes.swift,\ NotificationService.swift,\ NotificationServiceError.swift,\ NotificationSettings.swift,\ NotificationSettingsView.swift,\ NotificationWarrantyOperations.swift,\ PDFConstants.swift,\ PDFReportGenerator.swift,\ PerceptualHash.swift,\ PerformanceMonitor.swift,\ PhotoCaptureView.swift,\ PhotoIntegration.swift,\ PrimaryButton.swift,\ PrivacyPolicyView.swift,\ ProductLookupService.swift,\ Receipt.swift,\ ReceiptCaptureView.swift,\ ReceiptDataParser.swift,\ ReceiptDetailView.swift,\ ReceiptItemExtractor.swift,\ ReceiptOCRService.swift,\ ReceiptsSection.swift,\ RepairCostEstimationComponents.swift,\ RepairCostEstimationCore.swift,\ RepairCostEstimationForms.swift,\ RepairCostEstimationView.swift,\ ReportDataFormatter.swift,\ ReportExportManager.swift,\ ReportMetadata.swift,\ ReportOptions.swift,\ ReportSectionDrawer.swift,\ RestoreDataTransformer.swift,\ RetryStrategy.swift,\ Room.swift,\ RootFeature.swift,\ RootView.swift,\ ScanOptionsView.swift,\ ScanResultView.swift,\ ScanningTipsView.swift,\ SearchBar.swift,\ SearchFeature.swift,\ SearchFilterView.swift,\ SearchHistoryView.swift,\ SearchModels.swift,\ SearchResultsView.swift,\ SearchView.swift,\ SecureEnclaveHelper.swift,\ SecureStorage.swift,\ ServiceError.swift,\ SettingsFeature.swift,\ SettingsView.swift,\ ShareSheet.swift,\ Signpost.swift,\ SingleItemInsuranceReportView.swift,\ Slug.swift,\ SmartCache.swift,\ SpreadsheetExporter.swift,\ StandardFormExporter.swift,\ SyncService.swift,\ TermsOfServiceView.swift,\ TestConstants.swift,\ Theme.swift,\ ThemeManager.swift,\ Thumbnailer.swift,\ Typography.swift,\ UIConstants.swift,\ Validation.swift,\ ValidationIssue.swift,\ ValidationResult.swift,\ VisionTextExtractor.swift,\ Warranty.swift,\ WarrantyCharts.swift,\ WarrantyDashboardComponents.swift,\ WarrantyDashboardView.swift,\ WarrantyDocumentsView.swift,\ WarrantyFormView.swift,\ WarrantyManagementView.swift,\ WarrantyService.swift,\ WarrantyStatusCalculator.swift,\ WarrantySubviews.swift,\ WarrantyTrackingComponents.swift,\ WarrantyTrackingCore.swift,\ WarrantyTrackingService.swift,\ WarrantyTrackingSheets.swift,\ WarrantyTrackingView.swift,\ XMLExporter.swift,\ GeneratedAssetSymbols.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/AboutSupportSettingsView.swift /Users/griffin/Projects/Nestory/App-Main/AddItemView.swift /Users/griffin/Projects/Nestory/App-Main/AdvancedSearchView.swift /Users/griffin/Projects/Nestory/App-Main/ViewModels/AdvancedSearchViewModel.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/AnalyticsCharts.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsCurrencyOperations.swift /Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/AnalyticsDataProvider.swift /Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsModels.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsService.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsServiceError.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppMetadataService.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectConfiguration.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectOrchestrator.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectTypes.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppVersionModels.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppVersionOperations.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppVersionService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/AppearanceSettingsView.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/AppleFrameworksReceiptProcessor.swift /Users/griffin/Projects/Nestory/Services/AuthService/AuthService.swift /Users/griffin/Projects/Nestory/Foundation/Models/AuthTypes.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/BackupDataTransformer.swift /Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/BackupModels.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/BarcodeScannerService.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerView.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/BeforeAfterPhotoComparisonView.swift /Users/griffin/Projects/Nestory/Foundation/Core/BundleConfiguration.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/BusinessConstants.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/Cache.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/CacheConstants.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/CacheEncoder.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/CacheSizeManager.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/CameraScannerView.swift /Users/griffin/Projects/Nestory/Infrastructure/Camera/CameraScannerViewController.swift /Users/griffin/Projects/Nestory/App-Main/CategoriesView.swift /Users/griffin/Projects/Nestory/Foundation/Models/Category.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/CategoryClassifier.swift /Users/griffin/Projects/Nestory/Services/ClaimContentGenerator.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimDocumentCore.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimDocumentHelpers.swift /Users/griffin/Projects/Nestory/Services/ClaimDocumentProcessor.swift /Users/griffin/Projects/Nestory/Services/ClaimEmailService.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportCore.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift /Users/griffin/Projects/Nestory/Services/ClaimExportService.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportValidators.swift /Users/griffin/Projects/Nestory/App-Main/ClaimExportView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift /Users/griffin/Projects/Nestory/Foundation/Models/ClaimInfo.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimJSONGenerator.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimPDFGenerator.swift /Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView.swift /Users/griffin/Projects/Nestory/Services/ClaimPackageCore.swift /Users/griffin/Projects/Nestory/Services/ClaimPackageExporter.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPreviewView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimSpreadsheetGenerator.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionSteps.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimTemplateManager.swift /Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift /Users/griffin/Projects/Nestory/Services/ClaimValidationService.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudBackupService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/CloudBackupSettingsView.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudKitAssetManager.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudKitBackupOperations.swift /Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionModels.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionNotesView.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionPhotoManagementView.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionSelectionView.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/Constants.swift /Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift /Users/griffin/Projects/Nestory/Infrastructure/Security/CryptoBox.swift /Users/griffin/Projects/Nestory/Services/CurrencyService/CurrencyService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/CurrencySettingsView.swift /Users/griffin/Projects/Nestory/Foundation/Utils/CurrencyUtils.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentComponents.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentCore.swift /Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentModels.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentReportView.swift /Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentService.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentSteps.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentWorkflowView.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageSeverityAssessmentView.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/DangerZoneSettingsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/DataFormatHelpers.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/DataStorageSettingsView.swift /Users/griffin/Projects/Nestory/Foundation/Utils/DateUtils.swift /Users/griffin/Projects/Nestory/Services/DependencyKeys.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/DiskCache.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/DocumentManagementView.swift /Users/griffin/Projects/Nestory/Foundation/Models/DocumentationLevel.swift /Users/griffin/Projects/Nestory/App-Main/EditItemView.swift /Users/griffin/Projects/Nestory/UI/UI-Components/EmptyStateView.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/EncryptionDeclarationService.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/Endpoint.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/EnhancedAnalyticsSummaryView.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/EnhancedInsightsView.swift /Users/griffin/Projects/Nestory/App-Main/EnhancedReceiptDataView.swift /Users/griffin/Projects/Nestory/Config/EnvironmentConfiguration.swift /Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift /Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift /Users/griffin/Projects/Nestory/Foundation/Core/Errors.swift /Users/griffin/Projects/Nestory/Foundation/Models/ExportFormat.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/ExportOptionsView.swift /Users/griffin/Projects/Nestory/Services/ExportService/ExportService.swift /Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift /Users/griffin/Projects/Nestory/UI/UI-Core/Extensions.swift /Users/griffin/Projects/Nestory/Config/FeatureFlags.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/FileStore.swift /Users/griffin/Projects/Nestory/Foundation/Core/FoundationLogger.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/GeneralSettingsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/HTMLTemplateGenerator.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/HTTPClient.swift /Users/griffin/Projects/Nestory/Foundation/Core/Identifiers.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/ImageIO.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/ImportExportModels.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/ImportExportService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/InsightsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimModels.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimService.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimValidation.swift /Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift /Users/griffin/Projects/Nestory/App-Main/InsuranceExportOptionsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExportService.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/InsuranceReportData.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceReportService.swift /Users/griffin/Projects/Nestory/Foundation/Models/InsuranceTypes.swift /Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift /Users/griffin/Projects/Nestory/App-Main/InventoryListView.swift /Users/griffin/Projects/Nestory/App-Main/ViewModels/InventoryListViewModel.swift /Users/griffin/Projects/Nestory/Services/InventoryService/InventoryService.swift /Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift /Users/griffin/Projects/Nestory/Foundation/Models/Item.swift /Users/griffin/Projects/Nestory/UI/UI-Components/ItemCard.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionView.swift /Users/griffin/Projects/Nestory/Features/Inventory/ItemDetailFeature.swift /Users/griffin/Projects/Nestory/App-Main/ItemDetailView.swift /Users/griffin/Projects/Nestory/Features/Inventory/ItemEditFeature.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/JSONOperations.swift /Users/griffin/Projects/Nestory/Infrastructure/Security/KeychainStore.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/LiveAnalyticsService.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/LiveBarcodeScannerService.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/LiveCloudBackupService.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/LiveImportExportService.swift /Users/griffin/Projects/Nestory/Services/NotificationService/LiveNotificationService.swift /Users/griffin/Projects/Nestory/App-Main/LiveReceiptScannerView.swift /Users/griffin/Projects/Nestory/Services/WarrantyTrackingService/LiveWarrantyTrackingService.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/LocationManagementView.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/Log.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/LogContext.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/LogSpecializedOperations.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/MLReceiptProcessor.swift /Users/griffin/Projects/Nestory/App-Main/ManualBarcodeEntryView.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/MediaUploadModels.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/MediaUploadOperations.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/MediaUploadService.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/MemoryCache.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/MetricKitCollector.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/MockAnalyticsService.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/MockBarcodeScannerService.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/MockCloudBackupService.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/MockImportExportService.swift /Users/griffin/Projects/Nestory/Services/NotificationService/MockNotificationService.swift /Users/griffin/Projects/Nestory/Foundation/Core/Money.swift /Users/griffin/Projects/Nestory/App-Main/NestoryApp.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/NetworkClient.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/NetworkConstants.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/NetworkError.swift /Users/griffin/Projects/Nestory/Foundation/Core/NonEmptyString.swift /Users/griffin/Projects/Nestory/Infrastructure/Actors/NotificationActor.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationAdvancedOperations.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationAnalytics.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/NotificationAnalyticsView.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationBackgroundProcessor.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/NotificationFrequencyView.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationManagement.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationOtherOperations.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationPersistence.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationScheduler.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationSchedulingTypes.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationService.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationServiceError.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationSettings.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/NotificationSettingsView.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationWarrantyOperations.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/PDFConstants.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/PDFReportGenerator.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/PerceptualHash.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/PerformanceMonitor.swift /Users/griffin/Projects/Nestory/App-Main/PhotoCaptureView.swift /Users/griffin/Projects/Nestory/Services/InventoryService/PhotoIntegration.swift /Users/griffin/Projects/Nestory/UI/UI-Components/PrimaryButton.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/PrivacyPolicyView.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/ProductLookupService.swift /Users/griffin/Projects/Nestory/Foundation/Models/Receipt.swift /Users/griffin/Projects/Nestory/App-Main/ReceiptCaptureView.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/ReceiptDataParser.swift /Users/griffin/Projects/Nestory/App-Main/ReceiptDetailView.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/ReceiptItemExtractor.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCRService.swift /Users/griffin/Projects/Nestory/App-Main/ReceiptsSection.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimation/RepairCostEstimationComponents.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimation/RepairCostEstimationCore.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimation/RepairCostEstimationForms.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimationView.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/ReportDataFormatter.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/ReportExportManager.swift /Users/griffin/Projects/Nestory/Foundation/Models/ReportMetadata.swift /Users/griffin/Projects/Nestory/Foundation/Models/ReportOptions.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/ReportSectionDrawer.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/RestoreDataTransformer.swift /Users/griffin/Projects/Nestory/Foundation/Core/RetryStrategy.swift /Users/griffin/Projects/Nestory/Foundation/Models/Room.swift /Users/griffin/Projects/Nestory/App-Main/RootFeature.swift /Users/griffin/Projects/Nestory/App-Main/RootView.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/ScanOptionsView.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/ScanResultView.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/ScanningTipsView.swift /Users/griffin/Projects/Nestory/UI/UI-Components/SearchBar.swift /Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchFilterView.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchHistoryView.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchModels.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchResultsView.swift /Users/griffin/Projects/Nestory/Features/Search/SearchView.swift /Users/griffin/Projects/Nestory/Infrastructure/Security/SecureEnclaveHelper.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/SecureStorage.swift /Users/griffin/Projects/Nestory/Foundation/Core/ServiceError.swift /Users/griffin/Projects/Nestory/Features/Settings/SettingsFeature.swift /Users/griffin/Projects/Nestory/Features/Settings/SettingsView.swift /Users/griffin/Projects/Nestory/UI/UI-Components/ShareSheet.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/Signpost.swift /Users/griffin/Projects/Nestory/App-Main/SingleItemInsuranceReportView.swift /Users/griffin/Projects/Nestory/Foundation/Core/Slug.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/SmartCache.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/SpreadsheetExporter.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/StandardFormExporter.swift /Users/griffin/Projects/Nestory/Services/SyncService/SyncService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/TermsOfServiceView.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/TestConstants.swift /Users/griffin/Projects/Nestory/UI/UI-Core/Theme.swift /Users/griffin/Projects/Nestory/App-Main/ThemeManager.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/Thumbnailer.swift /Users/griffin/Projects/Nestory/UI/UI-Core/Typography.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/UIConstants.swift /Users/griffin/Projects/Nestory/Foundation/Utils/Validation.swift /Users/griffin/Projects/Nestory/Foundation/Core/ValidationIssue.swift /Users/griffin/Projects/Nestory/Foundation/Models/ValidationResult.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/VisionTextExtractor.swift /Users/griffin/Projects/Nestory/Foundation/Models/Warranty.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyCharts.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyDashboardComponents.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyDashboardView.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyDocumentsView.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyFormView.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyManagementView.swift /Users/griffin/Projects/Nestory/Services/WarrantyService/WarrantyService.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyStatusCalculator.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantySubviews.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTracking/WarrantyTrackingComponents.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTracking/WarrantyTrackingCore.swift /Users/griffin/Projects/Nestory/Services/WarrantyTrackingService/WarrantyTrackingService.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTracking/WarrantyTrackingSheets.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/XMLExporter.swift /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources/GeneratedAssetSymbols.swift (in target 'Nestory' from project 'Nestory')

Failed frontend command:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -filelist /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/sources-2 -supplementary-output-file-map /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/supplementaryOutputs-69 -target x86_64-apple-ios17.0-simulator -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator18.5.sdk -I /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator -no-color-diagnostics -g -debug-info-format\=dwarf -dwarf-version\=4 -module-cache-path /Users/griffin/Projects/Nestory/build/ModuleCache.noindex -swift-version 6 -enforce-exclusivity\=checked -O -serialize-debugging-options -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/CasePathsMacros\#CasePathsMacros -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/ComposableArchitectureMacros\#ComposableArchitectureMacros -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/DependenciesMacrosPlugin\#DependenciesMacrosPlugin -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/PerceptionMacros\#PerceptionMacros -const-gather-protocols-file /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory_const_extract_protocols.json -enable-experimental-feature Macros -enable-upcoming-feature ExistentialAny -enable-experimental-feature DebugDescriptionMacro -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/griffin/Projects/Nestory/build/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/griffin/Projects/Nestory -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -file-compilation-dir /Users/griffin/Projects/Nestory -Xcc -fmodule-map-file\=/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/GeneratedModuleMaps-iphonesimulator/UIKitNavigationShim.modulemap -Xcc -ivfsstatcache -Xcc /Users/griffin/Projects/Nestory/build/SDKStatCaches.noindex/iphonesimulator18.5-22F76-d5fc8ad4295d2ef488fb7d0f804ce0c4.sdkstatcache -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-generated-files.hmap -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-own-target-headers.hmap -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory-d814d5eaa0ab5ce088e3156e1a6c6e78-VFS-iphonesimulator/all-product-headers.yaml -Xcc -iquote -Xcc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-project-headers.hmap -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-navigation/Sources/UIKitNavigationShim/include -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/include -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources-normal/x86_64 -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources/x86_64 -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources -module-name Nestory -frontend-parseable-output -disable-clang-spi -target-sdk-version 18.5 -target-sdk-name iphonesimulator18.5 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/lib/swift/host/plugins\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -enable-default-cmo -num-threads 10 -output-filelist /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/outputs-1 -index-unit-output-path-filelist /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/index-unit-outputs-1

CompileSwift normal x86_64 (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:151:5: error: 'buildExpression' is unavailable: this expression does not conform to 'View'
    item.brand = "Apple"
    ^~~~
SwiftUICore.ViewBuilder.buildExpression:3:22: note: 'buildExpression' has been explicitly marked unavailable here
  public static func buildExpression(_ invalid: Any) -> some View
                     ^
/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:152:5: error: 'buildExpression' is unavailable: this expression does not conform to 'View'
    item.modelNumber = "MacBook Pro 16-inch"
    ^~~~
SwiftUICore.ViewBuilder.buildExpression:3:22: note: 'buildExpression' has been explicitly marked unavailable here
  public static func buildExpression(_ invalid: Any) -> some View
                     ^
/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:153:5: error: 'buildExpression' is unavailable: this expression does not conform to 'View'
    item.serialNumber = "ABC123DEF456"
    ^~~~
SwiftUICore.ViewBuilder.buildExpression:3:22: note: 'buildExpression' has been explicitly marked unavailable here
  public static func buildExpression(_ invalid: Any) -> some View
                     ^
/Users/griffin/Projects/Nestory/App-Main/ViewModels/AdvancedSearchViewModel.swift:43:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    private let inventoryService: InventoryService
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/App-Main/ViewModels/AdvancedSearchViewModel.swift:46:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    public init(inventoryService: InventoryService) {
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:47:17: error: cannot find 'SummaryCardsView' in scope
                SummaryCardsView(
                ^~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:56:17: error: cannot find 'SummaryCardsView' in scope
                SummaryCardsView(
                ^~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:53:27: error: cannot infer contextual base in reference to member 'horizontal'
                .padding(.horizontal)
                         ~^~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:140:27: error: cannot convert value of type 'Binding<Store<AlertState<Alert>, AnalyticsFeature.Action.Alert>?>' to expected argument type 'Binding<Store<AlertState<Alert>, Alert>?>'
            .alert($store.scope(state: \.alert, action: \.alert))
                          ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:140:27: note: arguments to generic parameter 'Action' ('AnalyticsFeature.Action.Alert' and 'Alert') are expected to be equal
            .alert($store.scope(state: \.alert, action: \.alert))
                          ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:258:24: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    case dataLoadError(Error)
                       ^~~~~
                       any Error
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: error: type '(_, _) -> _' cannot conform to 'Reducer'
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: note: only concrete types such as structs, enums and classes can conform to protocols
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-composable-architecture/Sources/ComposableArchitecture/Reducer/Reducers/Reduce.swift:28:10: note: required by initializer 'init(_:)' where 'some Reducer<State, Action>' = '(_, _) -> _'
  public init(_ reducer: some Reducer<State, Action>) {
         ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: error: initializer 'init(_:)' requires the types 'AnalyticsFeature.Action' and '((_, _) -> _).Action' be equivalent
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-composable-architecture/Sources/ComposableArchitecture/Reducer/Reducers/Reduce.swift:28:10: note: where 'Action' = 'AnalyticsFeature.Action', '(some Reducer<State, Action>).Action' = '((_, _) -> _).Action'
  public init(_ reducer: some Reducer<State, Action>) {
         ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: error: initializer 'init(_:)' requires the types 'AnalyticsFeature.State' and '((_, _) -> _).State' be equivalent
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-composable-architecture/Sources/ComposableArchitecture/Reducer/Reducers/Reduce.swift:28:10: note: where 'State' = 'AnalyticsFeature.State', '(some Reducer<State, Action>).State' = '((_, _) -> _).State'
  public init(_ reducer: some Reducer<State, Action>) {
         ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:122:25: error: cannot infer contextual base in reference to member 'run'
                return .run { send in
                       ~^~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:124:33: error: cannot infer contextual base in reference to member 'loadAnalytics'
                    await send(.loadAnalytics)
                               ~^~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:317:46: error: generic parameter 'ElementOfResult' could not be inferred
    let categoryBreakdowns = itemsByCategory.compactMap { category, categoryItems in
                                             ^
Swift.Sequence.compactMap:2:24: note: in call to function 'compactMap'
@inlinable public func compactMap<ElementOfResult>(_ transform: (Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]}
                       ^
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:45:27: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case networkError(Error)
                          ^~~~~
                          any Error
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:46:28: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case decodingError(Error)
                           ^~~~~
                           any Error
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:269:15: warning: use of protocol 'Encodable' as a type must be written 'any Encodable'; this will be an error in a future Swift language mode
    let body: Encodable?
              ^~~~~~~~~
              (any Encodable)
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:275:15: warning: use of protocol 'Encodable' as a type must be written 'any Encodable'; this will be an error in a future Swift language mode
        body: Encodable? = nil
              ^~~~~~~~~
              (any Encodable)
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:197:24: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        var lastError: Error?
                       ^~~~~
                       (any Error)
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectOrchestrator.swift:63:21: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case failed(Error)
                    ^~~~~
                    any Error
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectOrchestrator.swift:96:51: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @Published public private(set) var lastError: Error?
                                                  ^~~~~
                                                  (any Error)
/Users/griffin/Projects/Nestory/Services/ReceiptOCR/AppleFrameworksReceiptProcessor.swift:209:13: warning: initialization of immutable value 'fullRange' was never used; consider replacing with assignment to '_' or removing it
        let fullRange = NSRange(location: 0, length: text.count)
        ~~~~^~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/ReceiptOCR/AppleFrameworksReceiptProcessor.swift:266:14: warning: immutable value 'index' was never used; consider replacing with '_' or removing it
        for (index, line) in recognizedText.lines.enumerated() {
             ^~~~~
             _
/Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift:10:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift:10:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift:10:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:89:34: warning: no 'async' operations occur within 'await' expression
                let rawHeaders = await self.parseCSVLine(lines[0])
                                 ^
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:111:38: warning: no 'async' operations occur within 'await' expression
                        let values = await self.parseCSVLine(line)
                                     ^
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:122:44: warning: no 'async' operations occur within 'await' expression
                            let item = try await self.createItemFromCSVRow(headers: headers, values: values)
                                           ^
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:147:23: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
                    } catch {
                      ^
/Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/CameraScannerView.swift:10:18: warning: use of protocol 'BarcodeScannerService' as a type must be written 'any BarcodeScannerService'; this will be an error in a future Swift language mode
    let scanner: BarcodeScannerService
                 ^~~~~~~~~~~~~~~~~~~~~
                 any BarcodeScannerService
/Users/griffin/Projects/Nestory/Infrastructure/Camera/CameraScannerViewController.swift:13:25: warning: use of protocol 'BarcodeScannerService' as a type must be written 'any BarcodeScannerService'; this will be an error in a future Swift language mode
    public var scanner: BarcodeScannerService?
                        ^~~~~~~~~~~~~~~~~~~~~
                        (any BarcodeScannerService)
/Users/griffin/Projects/Nestory/Foundation/Models/Category.swift:74:36: warning: use of protocol 'Encoder' as a type must be written 'any Encoder'; this will be an error in a future Swift language mode
    public func encode(to encoder: Encoder) throws {
                                   ^~~~~~~
                                   any Encoder
/Users/griffin/Projects/Nestory/Foundation/Models/Category.swift:85:43: warning: use of protocol 'Decoder' as a type must be written 'any Decoder'; this will be an error in a future Swift language mode
    public convenience init(from decoder: Decoder) throws {
                                          ^~~~~~~
                                          any Decoder
/Users/griffin/Projects/Nestory/Services/ReceiptOCR/CategoryClassifier.swift:195:13: warning: initialization of immutable value 'textLength' was never used; consider replacing with assignment to '_' or removing it
        let textLength = text.count
        ~~~~^~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimDocumentProcessor.swift:61:13: warning: variable 'warranties' was never mutated; consider changing to 'let' constant
        var warranties: [Data] = []
        ~~~ ^
        let
/Users/griffin/Projects/Nestory/Services/ClaimDocumentProcessor.swift:62:16: warning: value 'warranty' was defined but never used; consider replacing with boolean test
        if let warranty = item.warranty {
           ~~~~^~~~~~~~~~~
                                        != nil
/Users/griffin/Projects/Nestory/Services/ClaimEmailService.swift:339:20: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
            error: Error?
                   ^~~~~
                   (any Error)
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportCore.swift:149:18: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        service: CloudStorageService
                 ^~~~~~~~~~~~~~~~~~~
                 any CloudStorageService
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:53: warning: left side of nil coalescing operator '??' has non-optional type 'Any', so the right side is never used
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~~~~~~~~~~~~~~~^~~~
                                                   
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:34: warning: expression implicitly coerced from 'Decimal?' to 'Any'
                "purchasePrice": item.purchasePrice ?? 0,
                                 ^~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:39: note: provide a default value to avoid this warning
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~^~~~~~~~~~~~~
                                                    ?? <#default value#>
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:39: note: force-unwrap the value to avoid this warning
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~^~~~~~~~~~~~~
                                                   !
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:39: note: explicitly cast to 'Any' with 'as Any' to silence this warning
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~^~~~~~~~~~~~~
                                                    as Any
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:163:33: warning: expression implicitly coerced from 'String?' to 'Any'
                "serialNumber": item.serialNumber ?? "",
                                ^~~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:163:51: note: provide a default value to avoid this warning
                "serialNumber": item.serialNumber ?? "",
                                ~~~~~~~~~~~~~~~~~~^~~~~
                                                        ?? <#default value#>
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:163:51: note: force-unwrap the value to avoid this warning
                "serialNumber": item.serialNumber ?? "",
                                ~~~~~~~~~~~~~~~~~~^~~~~
                                                       !
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:163:51: note: explicitly cast to 'Any' with 'as Any' to silence this warning
                "serialNumber": item.serialNumber ?? "",
                                ~~~~~~~~~~~~~~~~~~^~~~~
                                                        as Any
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:246:23: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    case networkError(Error)
                      ^~~~~
                      any Error
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:134:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:134:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:134:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/Services/ClaimExportService.swift:74:18: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        service: CloudStorageService
                 ^~~~~~~~~~~~~~~~~~~
                 any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimExportView.swift:276:21: warning: variable 'modifiedRequest' was never mutated; consider changing to 'let' constant
                var modifiedRequest = claim.request
                ~~~ ^
                let
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift:202:46: warning: left side of nil coalescing operator '??' has non-optional type 'String', so the right side is never used
            <p>\(request.incidentDescription ?? "No description provided")</p>
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                            
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift:230:34: error: value of type 'String' has no member 'name'
                <td>\(item.room?.name ?? "N/A")</td>
                      ~~~~~~~~~~ ^~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimJSONGenerator.swift:73:34: error: value of type 'String' has no member 'name'
            location: item.room?.name,
                      ~~~~~~~~~~ ^~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimPDFGenerator.swift:171:63: warning: left side of nil coalescing operator '??' has non-optional type 'String', so the right side is never used
        let incidentDescription = request.incidentDescription ?? "No description provided"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                             
/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:87:17: error: non-sendable parameter type 'ClaimPackageRequest' cannot be sent from caller of protocol requirement 'assemblePackage(request:)' into main actor-isolated implementation
    public func assemblePackage(request: ClaimPackageRequest) async throws -> ClaimPackage {
                ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:176:15: note: consider making struct 'ClaimPackageRequest' conform to the 'Sendable' protocol
public struct ClaimPackageRequest {
              ^
                                  : Sendable
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:24: error: missing argument label 'isExpanded:' in call
                Section("Incident Description", content: {
                       ^
                        isExpanded: 
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:25: error: cannot convert value of type 'String' to expected argument type 'Binding<Bool>'
                Section("Incident Description", content: {
                        ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:312:17: error: generic parameter 'V' could not be inferred
                Section("Media Inclusion", content: {
                ^
SwiftUI.Section.init:2:20: note: in call to initializer
nonisolated public init<V>(_ titleKey: LocalizedStringKey, @TableRowBuilder<V> content: () -> Content) where Parent == TableHeaderRowContent<V, Text>, Footer == EmptyTableRowContent<V>, V == Content.TableRowValue}
                   ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:33:35: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    private let assemblerService: ClaimPackageAssemblerService
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:36:33: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    public var assemblyService: ClaimPackageAssemblerService {
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:42:35: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    public init(assemblerService: ClaimPackageAssemblerService = LiveClaimPackageAssemblerService()) {
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:299:26: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    let assemblyService: ClaimPackageAssemblerService
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:304:26: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
        assemblyService: ClaimPackageAssemblerService,
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:20: error: missing argument label 'isExpanded:' in call
            Section("Incident Details", content: {
                   ^
                    isExpanded: 
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:21: error: cannot convert value of type 'String' to expected argument type 'Binding<Bool>'
            Section("Incident Details", content: {
                    ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:20: error: missing argument label 'isExpanded:' in call
            Section("Documentation Level", content: {
                   ^
                    isExpanded: 
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:21: error: cannot convert value of type 'String' to expected argument type 'Binding<Bool>'
            Section("Documentation Level", content: {
                    ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:259:26: error: cannot use optional chaining on non-optional value of type '[Data]'
            !(item.photos?.isEmpty ?? true)
              ~~~~~~~~~~~^
                         
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:56: error: cannot find 'item' in scope
        let itemsWithPhotos = selectedItems.filter { !(item.photos?.isEmpty ?? true) }.count
                                                       ^~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:52: error: contextual type for closure argument list expects 1 argument, which cannot be implicitly ignored
        let itemsWithPhotos = selectedItems.filter { !(item.photos?.isEmpty ?? true) }.count
                                                   ^
                                                     _ in
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:284:44: error: cannot use optional chaining on non-optional value of type '[Data]'
        if selectedItems.filter({ $0.photos?.isEmpty ?? true }).count > 0 {
                                  ~~~~~~~~~^
                                           
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:337:45: error: value of type 'ClaimPackage' has no member 'itemCount'
                            Text("\(package.itemCount)")
                                    ~~~~~~~ ^~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:407:20: warning: value 'package' was defined but never used; consider replacing with boolean test
            if let package = generatedPackage {
               ~~~~^~~~~~~~~~
                                              != nil
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimSpreadsheetGenerator.swift:115:35: error: value of type 'String' has no member 'name'
        let location = item.room?.name ?? ""
                       ~~~~~~~~~~ ^~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:311:20: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    let services: [CloudStorageService]
                   ^~~~~~~~~~~~~~~~~~~
                   any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:312:26: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    let selectedService: CloudStorageService?
                         ^~~~~~~~~~~~~~~~~~~
                         (any CloudStorageService)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:313:20: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    let onSelect: (CloudStorageService) -> Void
                   ^~~~~~~~~~~~~~~~~~~
                   any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:315:28: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public init(services: [CloudStorageService], selectedService: CloudStorageService?, onSelect: @escaping (CloudStorageService) -> Void) {
                           ^~~~~~~~~~~~~~~~~~~
                           any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:315:67: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public init(services: [CloudStorageService], selectedService: CloudStorageService?, onSelect: @escaping (CloudStorageService) -> Void) {
                                                                  ^~~~~~~~~~~~~~~~~~~
                                                                  (any CloudStorageService)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:315:110: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public init(services: [CloudStorageService], selectedService: CloudStorageService?, onSelect: @escaping (CloudStorageService) -> Void) {
                                                                                                             ^~~~~~~~~~~~~~~~~~~
                                                                                                             any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift:48:49: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    @Published public var selectedCloudService: CloudStorageService?
                                                ^~~~~~~~~~~~~~~~~~~
                                                (any CloudStorageService)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift:54:44: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @Published public var processingError: Error?
                                           ^~~~~
                                           (any Error)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift:63:32: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public var cloudServices: [CloudStorageService] {
                               ^~~~~~~~~~~~~~~~~~~
                               any CloudStorageService
/Users/griffin/Projects/Nestory/Services/ClaimValidationService.swift:30:54: error: static property 'standard' is internal and cannot be referenced from a default argument value
        requirements: ClaimValidationRequirements = .standard
                                                     ^
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:227:16: note: static property 'standard' is not '@usableFromInline' or public
    static let standard = ClaimValidationRequirements(
               ^
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:39:21: error: cannot find 'ClaimSubmissionProgressIndicator' in scope
                    ClaimSubmissionProgressIndicator(currentStep: currentStep, totalSteps: 4)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:45:29: error: cannot find 'ClaimTypeSelectionStep' in scope
                            ClaimTypeSelectionStep(
                            ^~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:51:29: error: cannot find 'ItemSelectionStep' in scope
                            ItemSelectionStep(
                            ^~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:57:29: error: cannot find 'ContactInformationStep' in scope
                            ContactInformationStep(contactInfo: $contactInfo)
                            ^~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:59:29: error: cannot find 'ClaimReviewStep' in scope
                            ClaimReviewStep(
                            ^~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:122:17: error: cannot find 'ClaimEmailComposerView' in scope
                ClaimEmailComposerView(claimPackage: claimPackage)
                ^~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:177:36: error: type 'InsuranceCompany' has no member 'statefarm'
                insuranceCompany: .statefarm, // TODO: Make user selectable
                                  ~^~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:190:71: error: type 'any ClaimPackageAssemblerService' has no member 'shared'
            let claimPackage = try await ClaimPackageAssemblerService.shared.assemblePackage(request: claimRequest)
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:21:38: warning: use of protocol 'NotificationService' as a type must be written 'any NotificationService'; this will be an error in a future Swift language mode
    private let notificationService: NotificationService?
                                     ^~~~~~~~~~~~~~~~~~~
                                     (any NotificationService)
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:23:66: warning: use of protocol 'NotificationService' as a type must be written 'any NotificationService'; this will be an error in a future Swift language mode
    public init(modelContext: ModelContext, notificationService: NotificationService? = nil) {
                                                                 ^~~~~~~~~~~~~~~~~~~
                                                                 (any NotificationService)
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:310:19: warning: value 'notificationService' was defined but never used; consider replacing with boolean test
        guard let notificationService else { return }
              ~~~~^
                                      != nil
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:316:13: warning: initialization of immutable value 'title' was never used; consider replacing with assignment to '_' or removing it
        let title = "Claim Status Update"
        ~~~~^~~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:317:13: warning: initialization of immutable value 'body' was never used; consider replacing with assignment to '_' or removing it
        let body = "Your \(claim.claimType.rawValue) claim status changed to \(newStatus.rawValue)"
        ~~~~^~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:329:19: warning: value 'notificationService' was defined but never used; consider replacing with boolean test
        guard let notificationService else { return }
              ~~~~^
                                      != nil
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:331:13: warning: initialization of immutable value 'title' was never used; consider replacing with assignment to '_' or removing it
        let title = "Claim Follow-up Due"
        ~~~~^~~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:332:13: warning: initialization of immutable value 'body' was never used; consider replacing with assignment to '_' or removing it
        let body = followUp.actionDescription
        ~~~~^~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudKitBackupOperations.swift:74:55: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    ) async throws -> [(CKRecord.ID, Result<CKRecord, Error>)] {
                                                      ^~~~~
                                                      any Error
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:100:47: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    @Published public var availableServices: [CloudStorageService] = []
                                              ^~~~~~~~~~~~~~~~~~~
                                              any CloudStorageService
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:119:20: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        _ service: CloudStorageService,
                   ^~~~~~~~~~~~~~~~~~~
                   any CloudStorageService
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:146:21: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        to service: CloudStorageService,
                    ^~~~~~~~~~~~~~~~~~~
                    any CloudStorageService
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:18:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://www.googleapis.com/upload/drive/v3/files"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:31:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://content.dropboxapi.com/2/files/upload"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:44:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://graph.microsoft.com/v1.0/me/drive/items/root:/\(fileName):/content"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:57:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://upload.box.com/api/2.0/files/content"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:77:42: warning: use of 'CKRecordValue' (aka '__CKRecordObjCValue') as a type must be written 'any CKRecordValue' (aka 'any __CKRecordObjCValue'); this will be an error in a future Swift language mode
        record["fileName"] = fileName as CKRecordValue
                                         ^~~~~~~~~~~~~
                                         (any CKRecordValue)
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:78:42: warning: use of 'CKRecordValue' (aka '__CKRecordObjCValue') as a type must be written 'any CKRecordValue' (aka 'any __CKRecordObjCValue'); this will be an error in a future Swift language mode
        record["uploadDate"] = Date() as CKRecordValue
                                         ^~~~~~~~~~~~~
                                         (any CKRecordValue)
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:58:20: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:58:20: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:58:20: note: make the property mutable instead
        public let id = UUID()
               ~~~ ^
               var
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:71:20: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:71:20: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:71:20: note: make the property mutable instead
        public let id = UUID()
               ~~~ ^
               var
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:10:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:10:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:10:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentReportView.swift:18:37: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @State private var reportError: Error?
                                    ^~~~~
                                    (any Error)
/Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentService.swift:31:38: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @Published public var lastError: Error?
                                     ^~~~~
                                     (any Error)
/Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentService.swift:166:9: warning: 'defer' statement at end of scope always executes immediately; replace with 'do' statement to silence this warning
        defer { isLoading = false }
        ^~~~~
        do
/Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentSteps.swift:195:83: error: missing argument for parameter #1 in call
                damageService: DamageAssessmentService(modelContext: ModelContext())
                                                                                  ^
                                                                                  <#ModelContainer#>
SwiftData.ModelContext.init:2:8: note: 'init(_:)' declared here
public init(_ container: ModelContainer)}
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:18:14: warning: @preconcurrency attribute on conformance to 'TestDependencyKey' has no effect
private enum InventoryServiceKey: @preconcurrency DependencyKey {
             ^                    ~~~~~~~~~~~~~~~~
                                  
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:140:14: warning: @preconcurrency attribute on conformance to 'DependencyKey' has no effect
private enum ReceiptOCRServiceKey: @preconcurrency DependencyKey {
             ^                     ~~~~~~~~~~~~~~~~
                                   
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:140:14: warning: @preconcurrency attribute on conformance to 'TestDependencyKey' has no effect
private enum ReceiptOCRServiceKey: @preconcurrency DependencyKey {
             ^                     ~~~~~~~~~~~~~~~~
                                   
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:669:10: error: method cannot be declared public because its result uses an internal type
    func loadHistory() async -> [SearchHistoryItem]
         ^                       ~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:480:8: note: type declared here
struct SearchHistoryItem: Equatable, Identifiable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:670:10: error: method cannot be declared public because its parameter uses an internal type
    func addToHistory(_ query: String, _ filters: SearchFilters) async
         ^                                        ~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:420:8: note: type declared here
struct SearchFilters: Equatable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:673:10: error: method cannot be declared public because its result uses an internal type
    func loadSavedSearches() async -> [SavedSearch]
         ^                             ~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:488:8: note: type declared here
struct SavedSearch: Equatable, Identifiable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:674:10: error: method cannot be declared public because its parameter uses an internal type
    func saveFavoriteSearch(_ savedSearch: SavedSearch) async
         ^                                 ~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:488:8: note: type declared here
struct SavedSearch: Equatable, Identifiable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:42:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveExportService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:43:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:102:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveNotificationService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:103:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:118:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveImportExportService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:119:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:142:9: error: call to main actor-isolated initializer 'init()' in a synchronous nonisolated context
        LiveReceiptOCRService()
        ^
/Users/griffin/Projects/Nestory/Services/ReceiptOCRService.swift:65:12: note: calls to initializer 'init()' from outside of its actor context are implicitly asynchronous
    public init() {
           ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:151:24: error: call to main actor-isolated initializer 'init()' in a synchronous nonisolated context
            return try LiveInsuranceReportService()
                       ^
/Users/griffin/Projects/Nestory/Services/InsuranceReportService.swift:68:12: note: calls to initializer 'init()' from outside of its actor context are implicitly asynchronous
    public init() {
           ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:151:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveInsuranceReportService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:152:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:305:24: error: extra argument 'tokenType' in call
            tokenType: "Bearer"
~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:527:13: error: argument 'items' must precede argument 'categories'
            items: [],
~~~~~~~~~~~~^~~~~~~~~
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: error: incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^                              ~~~~~~~~~~~
                                                                        generatedDate
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: error: missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^
/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:209:15: note: 'init(summary:content:generatedDate:policyHolder:policyNumber:)' declared here
public struct ClaimCoverLetter: Sendable {
              ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: error: incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^                              ~~~~~~~~~~~
                                                                        generatedDate
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: error: missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^
/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:209:15: note: 'init(summary:content:generatedDate:policyHolder:policyNumber:)' declared here
public struct ClaimCoverLetter: Sendable {
              ^
/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/DocumentManagementView.swift:79:63: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func handleDocumentImport(_ result: Result<[URL], Error>) {
                                                              ^~~~~
                                                              any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:16:25: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    private let logger: FoundationLogger?
                        ^~~~~~~~~~~~~~~~
                        (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:20:26: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    private init(logger: FoundationLogger? = nil) {
                         ^~~~~~~~~~~~~~~~
                         (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:25:30: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func setLogger(_: FoundationLogger) {
                             ^~~~~~~~~~~~~~~~
                             any FoundationLogger
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:32:18: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        _ error: Error,
                 ^~~~~
                 any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:125:47: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func determineSeverity(for error: Error) -> LogSeverity {
                                              ^~~~~
                                              any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:151:23: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    public let error: Error
                      ^~~~~
                      any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:195:18: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        _ error: Error,
                 ^~~~~
                 any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:227:21: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        from error: Error,
                    ^~~~~
                    any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:253:43: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func generateTitle(for error: Error) -> String {
                                          ^~~~~
                                          any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:276:52: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func getUserFriendlyMessage(for error: Error, context: String?) -> String {
                                                   ^~~~~
                                                   any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:301:52: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func getRecoverySuggestions(for error: Error) -> [String] {
                                                   ^~~~~
                                                   any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:328:36: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func canRetry(_ error: Error) -> Bool {
                                   ^~~~~
                                   any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:336:47: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func determineSeverity(for error: Error) -> ErrorSeverity {
                                              ^~~~~
                                              any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:310:43: warning: use of protocol 'LocalizedError' as a type must be written 'any LocalizedError'; this will be an error in a future Swift language mode
        if let localizedError = error as? LocalizedError {
                                          ^~~~~~~~~~~~~~
                                          (any LocalizedError)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:15:52: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    func recover(from error: ServiceError, logger: FoundationLogger?) async throws
                                                   ^~~~~~~~~~~~~~~~
                                                   (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:18:74: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T
                                                                         ^~~~~~~~~~~~~~~~
                                                                         (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:29:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:57:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:87:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:108:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:128:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:157:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:183:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:207:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:236:30: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    private let strategies: [ErrorRecoveryStrategy]
                             ^~~~~~~~~~~~~~~~~~~~~
                             any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:238:30: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    public init(strategies: [ErrorRecoveryStrategy] = Self.defaultStrategies()) {
                             ^~~~~~~~~~~~~~~~~~~~~
                             any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:242:48: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    public static func defaultStrategies() -> [ErrorRecoveryStrategy] {
                                               ^~~~~~~~~~~~~~~~~~~~~
                                               any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:251:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:270:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:288:35: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    private let recoveryStrategy: ErrorRecoveryStrategy
                                  ^~~~~~~~~~~~~~~~~~~~~
                                  any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:290:25: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    private let logger: FoundationLogger?
                        ^~~~~~~~~~~~~~~~
                        (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:293:27: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
        recoveryStrategy: ErrorRecoveryStrategy = CompositeRecoveryStrategy(),
                          ^~~~~~~~~~~~~~~~~~~~~
                          any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:295:17: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
        logger: FoundationLogger? = nil
                ^~~~~~~~~~~~~~~~
                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:11:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:11:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:11:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:47:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:47:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:47:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift:30:37: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @State private var reportError: Error?
                                    ^~~~~
                                    (any Error)
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift:103:47: error: argument passed to call that takes no arguments
            ClaimSubmissionView(modelContext: modelContext)
                               ~~~~~~~~~~~~~~~^~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:19: error: extra argument 'from' in call
            from: template,
~~~~~~~~~~~~~~~~~~^~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:27: error: missing argument for parameter 'template' in call
            from: template,
                          ^
                          , template: <#ClaimTemplate#>
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator.swift:31:17: note: 'generateDocument(request:template:)' declared here
    public func generateDocument(
                ^
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:124:35: error: value of type 'ClaimTrackingService' has no member 'getStatus'
        try await trackingService.getStatus(for: claimId)
                  ~~~~~~~~~~~~~~~ ^~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:132:35: error: value of type 'ClaimTrackingService' has no member 'updateStatus'
        try await trackingService.updateStatus(
                  ~~~~~~~~~~~~~~~ ^~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimService.swift:71:58: error: extra argument 'includePhotos' in call
        try await core.exportClaim(claim, includePhotos: includePhotos)
                                  ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift:402:20: warning: value 'claim' was defined but never used; consider replacing with boolean test
            if let claim = generatedClaim {
               ~~~~^~~~~~~~
                                          != nil
@__swiftmacro_7Nestory0029InsuranceClaimViewswift_tAFJhfMX560_0_33_4313E51CB80E133908053FBFEFA1302BLl7PreviewfMf_.swift:21:21: warning: initialization of immutable value 'context' was never used; consider replacing with assignment to '_' or removing it
                let context = ModelContext(container)
                    ^
/Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift:561:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift:561:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/InsuranceExportOptionsView.swift:21:37: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @State private var exportError: Error?
                                    ^~~~~
                                    (any Error)
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:13:33: warning: use of protocol 'InsuranceReportService' as a type must be written 'any InsuranceReportService'; this will be an error in a future Swift language mode
    let insuranceReportService: InsuranceReportService
                                ^~~~~~~~~~~~~~~~~~~~~~
                                any InsuranceReportService
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:28:73: warning: use of protocol 'InsuranceReportService' as a type must be written 'any InsuranceReportService'; this will be an error in a future Swift language mode
    init(items: [Item], categories: [Category], insuranceReportService: InsuranceReportService, isGenerating: Binding<Bool>) {
                                                                        ^~~~~~~~~~~~~~~~~~~~~~
                                                                        any InsuranceReportService
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:146:80: error: missing argument for parameter 'filename' in call
                let url = try await insuranceReportService.exportReport(pdfData)
                                                                               ^
                                                                               , filename: <#String#>
/Users/griffin/Projects/Nestory/Services/InsuranceReportService.swift:27:10: note: 'exportReport(_:filename:)' declared here
    func exportReport(
         ^
@__swiftmacro_7Nestory0037InsuranceReportOptionsViewswift_emGFlfMX159_0_33_7E7AB3158A065EF8A0D22E23DC1FA96DLl7PreviewfMf_.swift:22:45: warning: no calls to throwing functions occur within 'try' expression
                    insuranceReportService: try! LiveInsuranceReportService(),
                                            ^
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:160:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:160:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:32:19: error: method '==' must be declared public because it matches a requirement in public protocol 'Equatable'
    public struct State: Equatable {
                  ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:210:17: note: mark the operator function as 'public' to satisfy the requirement
    static func == (lhs: InventoryFeature.State, rhs: InventoryFeature.State) -> Bool {
                ^
    public 
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:74:30: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case loadItemsFailed(Error)
                             ^~~~~
                             any Error
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:82:14: error: enum case in a public enum uses an internal type
        case path(StackAction<Path.State, Path.Action>)
             ^                ~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:86:12: note: type declared here
    struct Path {
           ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:209:35: error: redundant conformance of 'InventoryFeature.State' to protocol 'Equatable'
extension InventoryFeature.State: Equatable {
                                  ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:32:19: note: 'InventoryFeature.State' declares conformance to protocol 'Equatable' here
    public struct State: Equatable {
                  ^
@__swiftmacro_7Nestory16InventoryFeature7ReducerfMe_.swift:1:1: error: property 'body' must be declared public because it matches a requirement in public protocol 'Reducer'
extension InventoryFeature: ComposableArchitecture.Reducer {
^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:29:1: note: in expansion of macro 'Reducer' on struct 'InventoryFeature' here
@Reducer
^~~~~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:29:1: note: in expansion of macro 'Reducer' on struct 'InventoryFeature' here
@Reducer
^~~~~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:109:9: note: mark the property as 'public' to satisfy the requirement
    var body: some ReducerOf<Self> {
        ^
    public 
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:119:47: error: capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure
                        let items = try await inventoryService.fetchItems()
                                              ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:30:15: note: consider making struct 'InventoryFeature' conform to the 'Sendable' protocol
public struct InventoryFeature {
              ^
                               : Sendable
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:186:39: error: capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure
                            try await inventoryService.deleteItem(id: item.id)
                                      ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:30:15: note: consider making struct 'InventoryFeature' conform to the 'Sendable' protocol
public struct InventoryFeature {
              ^
                               : Sendable
/Users/griffin/Projects/Nestory/App-Main/ViewModels/InventoryListViewModel.swift:39:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    private let inventoryService: InventoryService
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/App-Main/ViewModels/InventoryListViewModel.swift:42:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    public init(inventoryService: InventoryService) {
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:9: error: property 'body' must be declared public because it matches a requirement in public protocol 'View'
    var body: some View {
        ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:9: note: mark the property as 'public' to satisfy the requirement
    var body: some View {
        ^
    public 
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:25: error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
    var body: some View {
                        ^

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:151:5: 'buildExpression' is unavailable: this expression does not conform to 'View'

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:152:5: 'buildExpression' is unavailable: this expression does not conform to 'View'

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:153:5: 'buildExpression' is unavailable: this expression does not conform to 'View'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:47:17: Cannot find 'SummaryCardsView' in scope

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:56:17: Cannot find 'SummaryCardsView' in scope

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:53:27: Cannot infer contextual base in reference to member 'horizontal'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:140:27: Cannot convert value of type 'Binding<Store<AlertState<Alert>, AnalyticsFeature.Action.Alert>?>' to expected argument type 'Binding<Store<AlertState<Alert>, Alert>?>'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: Type '(_, _) -> _' cannot conform to 'Reducer'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: Initializer 'init(_:)' requires the types 'AnalyticsFeature.Action' and '((_, _) -> _).Action' be equivalent

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: Initializer 'init(_:)' requires the types 'AnalyticsFeature.State' and '((_, _) -> _).State' be equivalent

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:122:25: Cannot infer contextual base in reference to member 'run'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:124:33: Cannot infer contextual base in reference to member 'loadAnalytics'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:317:46: Generic parameter 'ElementOfResult' could not be inferred

/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift:230:34: Value of type 'String' has no member 'name'

/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimJSONGenerator.swift:73:34: Value of type 'String' has no member 'name'

/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:87:17: Non-sendable parameter type 'ClaimPackageRequest' cannot be sent from caller of protocol requirement 'assemblePackage(request:)' into main actor-isolated implementation

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:24: Missing argument label 'isExpanded:' in call

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:25: Cannot convert value of type 'String' to expected argument type 'Binding<Bool>'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:312:17: Generic parameter 'V' could not be inferred

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:20: Missing argument label 'isExpanded:' in call

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:21: Cannot convert value of type 'String' to expected argument type 'Binding<Bool>'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:20: Missing argument label 'isExpanded:' in call

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:21: Cannot convert value of type 'String' to expected argument type 'Binding<Bool>'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:259:26: Cannot use optional chaining on non-optional value of type '[Data]'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:56: Cannot find 'item' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:52: Contextual type for closure argument list expects 1 argument, which cannot be implicitly ignored

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:284:44: Cannot use optional chaining on non-optional value of type '[Data]'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:337:45: Value of type 'ClaimPackage' has no member 'itemCount'

/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimSpreadsheetGenerator.swift:115:35: Value of type 'String' has no member 'name'

/Users/griffin/Projects/Nestory/Services/ClaimValidationService.swift:30:54: Static property 'standard' is internal and cannot be referenced from a default argument value

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:39:21: Cannot find 'ClaimSubmissionProgressIndicator' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:45:29: Cannot find 'ClaimTypeSelectionStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:51:29: Cannot find 'ItemSelectionStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:57:29: Cannot find 'ContactInformationStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:59:29: Cannot find 'ClaimReviewStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:122:17: Cannot find 'ClaimEmailComposerView' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:177:36: Type 'InsuranceCompany' has no member 'statefarm'

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:190:71: Type 'any ClaimPackageAssemblerService' has no member 'shared'

/Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentSteps.swift:195:83: Missing argument for parameter #1 in call

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:669:10: Method cannot be declared public because its result uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:670:10: Method cannot be declared public because its parameter uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:673:10: Method cannot be declared public because its result uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:674:10: Method cannot be declared public because its parameter uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:142:9: Call to main actor-isolated initializer 'init()' in a synchronous nonisolated context

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:151:24: Call to main actor-isolated initializer 'init()' in a synchronous nonisolated context

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:305:24: Extra argument 'tokenType' in call

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:527:13: Argument 'items' must precede argument 'categories'

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: Incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: Missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: Incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: Missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call

/Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift:103:47: Argument passed to call that takes no arguments

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:19: Extra argument 'from' in call

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:27: Missing argument for parameter 'template' in call

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:124:35: Value of type 'ClaimTrackingService' has no member 'getStatus'

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:132:35: Value of type 'ClaimTrackingService' has no member 'updateStatus'

/Users/griffin/Projects/Nestory/Services/InsuranceClaimService.swift:71:58: Extra argument 'includePhotos' in call

/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:146:80: Missing argument for parameter 'filename' in call

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:32:19: Method '==' must be declared public because it matches a requirement in public protocol 'Equatable'

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:82:14: Enum case in a public enum uses an internal type

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:209:35: Redundant conformance of 'InventoryFeature.State' to protocol 'Equatable'

/var/folders/m4/sgt6s6fj7f7_k04fg65_7k440000gn/T/swift-generated-sources/@__swiftmacro_7Nestory16InventoryFeature7ReducerfMe_.swift:1:1: Property 'body' must be declared public because it matches a requirement in public protocol 'Reducer'

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:119:47: Capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:186:39: Capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:9: Property 'body' must be declared public because it matches a requirement in public protocol 'View'

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:25: Failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)

SwiftCompile normal arm64 Compiling\ AboutSupportSettingsView.swift,\ AddItemView.swift,\ AdvancedSearchView.swift,\ AdvancedSearchViewModel.swift,\ AnalyticsCharts.swift,\ AnalyticsCurrencyOperations.swift,\ AnalyticsDashboardView.swift,\ AnalyticsDataProvider.swift,\ AnalyticsFeature.swift,\ AnalyticsModels.swift,\ AnalyticsService.swift,\ AnalyticsServiceError.swift,\ AppMetadataService.swift,\ AppStoreConnectClient.swift,\ AppStoreConnectConfiguration.swift,\ AppStoreConnectOrchestrator.swift,\ AppStoreConnectTypes.swift,\ AppVersionModels.swift,\ AppVersionOperations.swift,\ AppVersionService.swift,\ AppearanceSettingsView.swift,\ AppleFrameworksReceiptProcessor.swift,\ AuthService.swift,\ AuthTypes.swift,\ BackupDataTransformer.swift,\ BackupMetadata.swift,\ BackupModels.swift,\ BarcodeScannerService.swift,\ BarcodeScannerView.swift,\ BeforeAfterPhotoComparisonView.swift,\ BundleConfiguration.swift,\ BusinessConstants.swift,\ CSVOperations.swift,\ Cache.swift,\ CacheConstants.swift,\ CacheEncoder.swift,\ CacheSizeManager.swift,\ CameraScannerView.swift,\ CameraScannerViewController.swift,\ CategoriesView.swift,\ Category.swift,\ CategoryClassifier.swift,\ ClaimContentGenerator.swift,\ ClaimDocumentCore.swift,\ ClaimDocumentGenerator.swift,\ ClaimDocumentHelpers.swift,\ ClaimDocumentProcessor.swift,\ ClaimEmailService.swift,\ ClaimExportCore.swift,\ ClaimExportFormatters.swift,\ ClaimExportModels.swift,\ ClaimExportService.swift,\ ClaimExportValidators.swift,\ ClaimExportView.swift,\ ClaimHTMLGenerator.swift,\ ClaimInfo.swift,\ ClaimJSONGenerator.swift,\ ClaimPDFGenerator.swift,\ ClaimPackageAssemblerService.swift,\ ClaimPackageAssemblyComponents.swift,\ ClaimPackageAssemblyCore.swift,\ ClaimPackageAssemblySteps.swift,\ ClaimPackageAssemblyView.swift,\ ClaimPackageCore.swift,\ ClaimPackageExporter.swift,\ ClaimPreviewView.swift,\ ClaimSpreadsheetGenerator.swift,\ ClaimSubmissionComponents.swift,\ ClaimSubmissionCore.swift,\ ClaimSubmissionSteps.swift,\ ClaimSubmissionView.swift,\ ClaimTemplateManager.swift,\ ClaimTrackingService.swift,\ ClaimValidationService.swift,\ CloudBackupService.swift,\ CloudBackupSettingsView.swift,\ CloudKitAssetManager.swift,\ CloudKitBackupOperations.swift,\ CloudStorageServices.swift,\ ConditionModels.swift,\ ConditionNotesView.swift,\ ConditionPhotoManagementView.swift,\ ConditionSelectionView.swift,\ Constants.swift,\ CostEstimation.swift,\ CryptoBox.swift,\ CurrencyService.swift,\ CurrencySettingsView.swift,\ CurrencyUtils.swift,\ DamageAssessmentComponents.swift,\ DamageAssessmentCore.swift,\ DamageAssessmentModels.swift,\ DamageAssessmentReportView.swift,\ DamageAssessmentService.swift,\ DamageAssessmentSteps.swift,\ DamageAssessmentWorkflowView.swift,\ DamageSeverityAssessmentView.swift,\ DangerZoneSettingsView.swift,\ DataFormatHelpers.swift,\ DataStorageSettingsView.swift,\ DateUtils.swift,\ DependencyKeys.swift,\ DiskCache.swift,\ DocumentManagementView.swift,\ DocumentationLevel.swift,\ EditItemView.swift,\ EmptyStateView.swift,\ EncryptionDeclarationService.swift,\ Endpoint.swift,\ EnhancedAnalyticsSummaryView.swift,\ EnhancedInsightsView.swift,\ EnhancedReceiptDataView.swift,\ EnvironmentConfiguration.swift,\ ErrorLogger.swift,\ ErrorRecoveryStrategy.swift,\ Errors.swift,\ ExportFormat.swift,\ ExportOptionsView.swift,\ ExportService.swift,\ ExportTypes.swift,\ Extensions.swift,\ FeatureFlags.swift,\ FileStore.swift,\ FoundationLogger.swift,\ GeneralSettingsView.swift,\ HTMLTemplateGenerator.swift,\ HTTPClient.swift,\ Identifiers.swift,\ ImageIO.swift,\ ImportExportModels.swift,\ ImportExportService.swift,\ ImportExportSettingsView.swift,\ InsightsView.swift,\ InsuranceClaimCore.swift,\ InsuranceClaimModels.swift,\ InsuranceClaimService.swift,\ InsuranceClaimValidation.swift,\ InsuranceClaimView.swift,\ InsuranceExportOptionsView.swift,\ InsuranceExportService.swift,\ InsuranceReportData.swift,\ InsuranceReportOptionsView.swift,\ InsuranceReportService.swift,\ InsuranceTypes.swift,\ InventoryFeature.swift,\ InventoryListView.swift,\ InventoryListViewModel.swift,\ InventoryService.swift,\ InventoryView.swift,\ Item.swift,\ ItemCard.swift,\ ItemConditionView.swift,\ ItemDetailFeature.swift,\ ItemDetailView.swift,\ ItemEditFeature.swift,\ JSONOperations.swift,\ KeychainStore.swift,\ LiveAnalyticsService.swift,\ LiveBarcodeScannerService.swift,\ LiveCloudBackupService.swift,\ LiveImportExportService.swift,\ LiveNotificationService.swift,\ LiveReceiptScannerView.swift,\ LiveWarrantyTrackingService.swift,\ LocationManagementView.swift,\ Log.swift,\ LogContext.swift,\ LogSpecializedOperations.swift,\ MLReceiptProcessor.swift,\ ManualBarcodeEntryView.swift,\ MediaUploadModels.swift,\ MediaUploadOperations.swift,\ MediaUploadService.swift,\ MemoryCache.swift,\ MetricKitCollector.swift,\ MockAnalyticsService.swift,\ MockBarcodeScannerService.swift,\ MockCloudBackupService.swift,\ MockImportExportService.swift,\ MockNotificationService.swift,\ Money.swift,\ NestoryApp.swift,\ NetworkClient.swift,\ NetworkConstants.swift,\ NetworkError.swift,\ NonEmptyString.swift,\ NotificationActor.swift,\ NotificationAdvancedOperations.swift,\ NotificationAnalytics.swift,\ NotificationAnalyticsView.swift,\ NotificationBackgroundProcessor.swift,\ NotificationFrequencyView.swift,\ NotificationManagement.swift,\ NotificationOtherOperations.swift,\ NotificationPersistence.swift,\ NotificationScheduler.swift,\ NotificationSchedulingTypes.swift,\ NotificationService.swift,\ NotificationServiceError.swift,\ NotificationSettings.swift,\ NotificationSettingsView.swift,\ NotificationWarrantyOperations.swift,\ PDFConstants.swift,\ PDFReportGenerator.swift,\ PerceptualHash.swift,\ PerformanceMonitor.swift,\ PhotoCaptureView.swift,\ PhotoIntegration.swift,\ PrimaryButton.swift,\ PrivacyPolicyView.swift,\ ProductLookupService.swift,\ Receipt.swift,\ ReceiptCaptureView.swift,\ ReceiptDataParser.swift,\ ReceiptDetailView.swift,\ ReceiptItemExtractor.swift,\ ReceiptOCRService.swift,\ ReceiptsSection.swift,\ RepairCostEstimationComponents.swift,\ RepairCostEstimationCore.swift,\ RepairCostEstimationForms.swift,\ RepairCostEstimationView.swift,\ ReportDataFormatter.swift,\ ReportExportManager.swift,\ ReportMetadata.swift,\ ReportOptions.swift,\ ReportSectionDrawer.swift,\ RestoreDataTransformer.swift,\ RetryStrategy.swift,\ Room.swift,\ RootFeature.swift,\ RootView.swift,\ ScanOptionsView.swift,\ ScanResultView.swift,\ ScanningTipsView.swift,\ SearchBar.swift,\ SearchFeature.swift,\ SearchFilterView.swift,\ SearchHistoryView.swift,\ SearchModels.swift,\ SearchResultsView.swift,\ SearchView.swift,\ SecureEnclaveHelper.swift,\ SecureStorage.swift,\ ServiceError.swift,\ SettingsFeature.swift,\ SettingsView.swift,\ ShareSheet.swift,\ Signpost.swift,\ SingleItemInsuranceReportView.swift,\ Slug.swift,\ SmartCache.swift,\ SpreadsheetExporter.swift,\ StandardFormExporter.swift,\ SyncService.swift,\ TermsOfServiceView.swift,\ TestConstants.swift,\ Theme.swift,\ ThemeManager.swift,\ Thumbnailer.swift,\ Typography.swift,\ UIConstants.swift,\ Validation.swift,\ ValidationIssue.swift,\ ValidationResult.swift,\ VisionTextExtractor.swift,\ Warranty.swift,\ WarrantyCharts.swift,\ WarrantyDashboardComponents.swift,\ WarrantyDashboardView.swift,\ WarrantyDocumentsView.swift,\ WarrantyFormView.swift,\ WarrantyManagementView.swift,\ WarrantyService.swift,\ WarrantyStatusCalculator.swift,\ WarrantySubviews.swift,\ WarrantyTrackingComponents.swift,\ WarrantyTrackingCore.swift,\ WarrantyTrackingService.swift,\ WarrantyTrackingSheets.swift,\ WarrantyTrackingView.swift,\ XMLExporter.swift,\ GeneratedAssetSymbols.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/AboutSupportSettingsView.swift /Users/griffin/Projects/Nestory/App-Main/AddItemView.swift /Users/griffin/Projects/Nestory/App-Main/AdvancedSearchView.swift /Users/griffin/Projects/Nestory/App-Main/ViewModels/AdvancedSearchViewModel.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/AnalyticsCharts.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsCurrencyOperations.swift /Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/AnalyticsDataProvider.swift /Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsModels.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsService.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/AnalyticsServiceError.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppMetadataService.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectConfiguration.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectOrchestrator.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectTypes.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppVersionModels.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppVersionOperations.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppVersionService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/AppearanceSettingsView.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/AppleFrameworksReceiptProcessor.swift /Users/griffin/Projects/Nestory/Services/AuthService/AuthService.swift /Users/griffin/Projects/Nestory/Foundation/Models/AuthTypes.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/BackupDataTransformer.swift /Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/BackupModels.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/BarcodeScannerService.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerView.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/BeforeAfterPhotoComparisonView.swift /Users/griffin/Projects/Nestory/Foundation/Core/BundleConfiguration.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/BusinessConstants.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/Cache.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/CacheConstants.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/CacheEncoder.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/CacheSizeManager.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/CameraScannerView.swift /Users/griffin/Projects/Nestory/Infrastructure/Camera/CameraScannerViewController.swift /Users/griffin/Projects/Nestory/App-Main/CategoriesView.swift /Users/griffin/Projects/Nestory/Foundation/Models/Category.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/CategoryClassifier.swift /Users/griffin/Projects/Nestory/Services/ClaimContentGenerator.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimDocumentCore.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimDocumentHelpers.swift /Users/griffin/Projects/Nestory/Services/ClaimDocumentProcessor.swift /Users/griffin/Projects/Nestory/Services/ClaimEmailService.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportCore.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift /Users/griffin/Projects/Nestory/Services/ClaimExportService.swift /Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportValidators.swift /Users/griffin/Projects/Nestory/App-Main/ClaimExportView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift /Users/griffin/Projects/Nestory/Foundation/Models/ClaimInfo.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimJSONGenerator.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimPDFGenerator.swift /Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView.swift /Users/griffin/Projects/Nestory/Services/ClaimPackageCore.swift /Users/griffin/Projects/Nestory/Services/ClaimPackageExporter.swift /Users/griffin/Projects/Nestory/App-Main/ClaimPreviewView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimSpreadsheetGenerator.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionSteps.swift /Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimTemplateManager.swift /Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift /Users/griffin/Projects/Nestory/Services/ClaimValidationService.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudBackupService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/CloudBackupSettingsView.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudKitAssetManager.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudKitBackupOperations.swift /Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionModels.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionNotesView.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionPhotoManagementView.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionViews/ConditionSelectionView.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/Constants.swift /Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift /Users/griffin/Projects/Nestory/Infrastructure/Security/CryptoBox.swift /Users/griffin/Projects/Nestory/Services/CurrencyService/CurrencyService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/CurrencySettingsView.swift /Users/griffin/Projects/Nestory/Foundation/Utils/CurrencyUtils.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentComponents.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentCore.swift /Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentModels.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentReportView.swift /Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentService.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentSteps.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentWorkflowView.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageSeverityAssessmentView.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/DangerZoneSettingsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/DataFormatHelpers.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/DataStorageSettingsView.swift /Users/griffin/Projects/Nestory/Foundation/Utils/DateUtils.swift /Users/griffin/Projects/Nestory/Services/DependencyKeys.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/DiskCache.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/DocumentManagementView.swift /Users/griffin/Projects/Nestory/Foundation/Models/DocumentationLevel.swift /Users/griffin/Projects/Nestory/App-Main/EditItemView.swift /Users/griffin/Projects/Nestory/UI/UI-Components/EmptyStateView.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/EncryptionDeclarationService.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/Endpoint.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/EnhancedAnalyticsSummaryView.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/EnhancedInsightsView.swift /Users/griffin/Projects/Nestory/App-Main/EnhancedReceiptDataView.swift /Users/griffin/Projects/Nestory/Config/EnvironmentConfiguration.swift /Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift /Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift /Users/griffin/Projects/Nestory/Foundation/Core/Errors.swift /Users/griffin/Projects/Nestory/Foundation/Models/ExportFormat.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/ExportOptionsView.swift /Users/griffin/Projects/Nestory/Services/ExportService/ExportService.swift /Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift /Users/griffin/Projects/Nestory/UI/UI-Core/Extensions.swift /Users/griffin/Projects/Nestory/Config/FeatureFlags.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/FileStore.swift /Users/griffin/Projects/Nestory/Foundation/Core/FoundationLogger.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/GeneralSettingsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/HTMLTemplateGenerator.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/HTTPClient.swift /Users/griffin/Projects/Nestory/Foundation/Core/Identifiers.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/ImageIO.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/ImportExportModels.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/ImportExportService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift /Users/griffin/Projects/Nestory/App-Main/AnalyticsViews/InsightsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimModels.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimService.swift /Users/griffin/Projects/Nestory/Services/InsuranceClaimValidation.swift /Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift /Users/griffin/Projects/Nestory/App-Main/InsuranceExportOptionsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExportService.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/InsuranceReportData.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift /Users/griffin/Projects/Nestory/Services/InsuranceReportService.swift /Users/griffin/Projects/Nestory/Foundation/Models/InsuranceTypes.swift /Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift /Users/griffin/Projects/Nestory/App-Main/InventoryListView.swift /Users/griffin/Projects/Nestory/App-Main/ViewModels/InventoryListViewModel.swift /Users/griffin/Projects/Nestory/Services/InventoryService/InventoryService.swift /Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift /Users/griffin/Projects/Nestory/Foundation/Models/Item.swift /Users/griffin/Projects/Nestory/UI/UI-Components/ItemCard.swift /Users/griffin/Projects/Nestory/App-Main/ItemConditionView.swift /Users/griffin/Projects/Nestory/Features/Inventory/ItemDetailFeature.swift /Users/griffin/Projects/Nestory/App-Main/ItemDetailView.swift /Users/griffin/Projects/Nestory/Features/Inventory/ItemEditFeature.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/JSONOperations.swift /Users/griffin/Projects/Nestory/Infrastructure/Security/KeychainStore.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/LiveAnalyticsService.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/LiveBarcodeScannerService.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/LiveCloudBackupService.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/LiveImportExportService.swift /Users/griffin/Projects/Nestory/Services/NotificationService/LiveNotificationService.swift /Users/griffin/Projects/Nestory/App-Main/LiveReceiptScannerView.swift /Users/griffin/Projects/Nestory/Services/WarrantyTrackingService/LiveWarrantyTrackingService.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/LocationManagementView.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/Log.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/LogContext.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/LogSpecializedOperations.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/MLReceiptProcessor.swift /Users/griffin/Projects/Nestory/App-Main/ManualBarcodeEntryView.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/MediaUploadModels.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/MediaUploadOperations.swift /Users/griffin/Projects/Nestory/Services/AppStoreConnect/MediaUploadService.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/MemoryCache.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/MetricKitCollector.swift /Users/griffin/Projects/Nestory/Services/AnalyticsService/MockAnalyticsService.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/MockBarcodeScannerService.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/MockCloudBackupService.swift /Users/griffin/Projects/Nestory/Services/ImportExportService/MockImportExportService.swift /Users/griffin/Projects/Nestory/Services/NotificationService/MockNotificationService.swift /Users/griffin/Projects/Nestory/Foundation/Core/Money.swift /Users/griffin/Projects/Nestory/App-Main/NestoryApp.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/NetworkClient.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/NetworkConstants.swift /Users/griffin/Projects/Nestory/Infrastructure/Network/NetworkError.swift /Users/griffin/Projects/Nestory/Foundation/Core/NonEmptyString.swift /Users/griffin/Projects/Nestory/Infrastructure/Actors/NotificationActor.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationAdvancedOperations.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationAnalytics.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/NotificationAnalyticsView.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationBackgroundProcessor.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/NotificationFrequencyView.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationManagement.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationOtherOperations.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationPersistence.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationScheduler.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationSchedulingTypes.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationService.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationServiceError.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationSettings.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/NotificationSettingsView.swift /Users/griffin/Projects/Nestory/Services/NotificationService/NotificationWarrantyOperations.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/PDFConstants.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/PDFReportGenerator.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/PerceptualHash.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/PerformanceMonitor.swift /Users/griffin/Projects/Nestory/App-Main/PhotoCaptureView.swift /Users/griffin/Projects/Nestory/Services/InventoryService/PhotoIntegration.swift /Users/griffin/Projects/Nestory/UI/UI-Components/PrimaryButton.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/PrivacyPolicyView.swift /Users/griffin/Projects/Nestory/Services/BarcodeScannerService/ProductLookupService.swift /Users/griffin/Projects/Nestory/Foundation/Models/Receipt.swift /Users/griffin/Projects/Nestory/App-Main/ReceiptCaptureView.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/ReceiptDataParser.swift /Users/griffin/Projects/Nestory/App-Main/ReceiptDetailView.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/ReceiptItemExtractor.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCRService.swift /Users/griffin/Projects/Nestory/App-Main/ReceiptsSection.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimation/RepairCostEstimationComponents.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimation/RepairCostEstimationCore.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimation/RepairCostEstimationForms.swift /Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/RepairCostEstimationView.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/ReportDataFormatter.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/ReportExportManager.swift /Users/griffin/Projects/Nestory/Foundation/Models/ReportMetadata.swift /Users/griffin/Projects/Nestory/Foundation/Models/ReportOptions.swift /Users/griffin/Projects/Nestory/Services/InsuranceReport/ReportSectionDrawer.swift /Users/griffin/Projects/Nestory/Services/CloudBackupService/RestoreDataTransformer.swift /Users/griffin/Projects/Nestory/Foundation/Core/RetryStrategy.swift /Users/griffin/Projects/Nestory/Foundation/Models/Room.swift /Users/griffin/Projects/Nestory/App-Main/RootFeature.swift /Users/griffin/Projects/Nestory/App-Main/RootView.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/ScanOptionsView.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/ScanResultView.swift /Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/ScanningTipsView.swift /Users/griffin/Projects/Nestory/UI/UI-Components/SearchBar.swift /Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchFilterView.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchHistoryView.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchModels.swift /Users/griffin/Projects/Nestory/App-Main/SearchViews/SearchResultsView.swift /Users/griffin/Projects/Nestory/Features/Search/SearchView.swift /Users/griffin/Projects/Nestory/Infrastructure/Security/SecureEnclaveHelper.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/SecureStorage.swift /Users/griffin/Projects/Nestory/Foundation/Core/ServiceError.swift /Users/griffin/Projects/Nestory/Features/Settings/SettingsFeature.swift /Users/griffin/Projects/Nestory/Features/Settings/SettingsView.swift /Users/griffin/Projects/Nestory/UI/UI-Components/ShareSheet.swift /Users/griffin/Projects/Nestory/Infrastructure/Monitoring/Signpost.swift /Users/griffin/Projects/Nestory/App-Main/SingleItemInsuranceReportView.swift /Users/griffin/Projects/Nestory/Foundation/Core/Slug.swift /Users/griffin/Projects/Nestory/Infrastructure/Cache/SmartCache.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/SpreadsheetExporter.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/StandardFormExporter.swift /Users/griffin/Projects/Nestory/Services/SyncService/SyncService.swift /Users/griffin/Projects/Nestory/App-Main/SettingsViews/TermsOfServiceView.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/TestConstants.swift /Users/griffin/Projects/Nestory/UI/UI-Core/Theme.swift /Users/griffin/Projects/Nestory/App-Main/ThemeManager.swift /Users/griffin/Projects/Nestory/Infrastructure/Storage/Thumbnailer.swift /Users/griffin/Projects/Nestory/UI/UI-Core/Typography.swift /Users/griffin/Projects/Nestory/Foundation/Core/Constants/UIConstants.swift /Users/griffin/Projects/Nestory/Foundation/Utils/Validation.swift /Users/griffin/Projects/Nestory/Foundation/Core/ValidationIssue.swift /Users/griffin/Projects/Nestory/Foundation/Models/ValidationResult.swift /Users/griffin/Projects/Nestory/Services/ReceiptOCR/VisionTextExtractor.swift /Users/griffin/Projects/Nestory/Foundation/Models/Warranty.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyCharts.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyDashboardComponents.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyDashboardView.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyDocumentsView.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyFormView.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyManagementView.swift /Users/griffin/Projects/Nestory/Services/WarrantyService/WarrantyService.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyStatusCalculator.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantySubviews.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTracking/WarrantyTrackingComponents.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTracking/WarrantyTrackingCore.swift /Users/griffin/Projects/Nestory/Services/WarrantyTrackingService/WarrantyTrackingService.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTracking/WarrantyTrackingSheets.swift /Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift /Users/griffin/Projects/Nestory/Services/InsuranceExport/XMLExporter.swift /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources/GeneratedAssetSymbols.swift (in target 'Nestory' from project 'Nestory')

Failed frontend command:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/swift-frontend -frontend -c -filelist /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/sources-1 -supplementary-output-file-map /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/supplementaryOutputs-68 -target arm64-apple-ios17.0-simulator -Xllvm -aarch64-use-tbi -enable-objc-interop -sdk /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator18.5.sdk -I /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/PackageFrameworks -F /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator -no-color-diagnostics -g -debug-info-format\=dwarf -dwarf-version\=4 -module-cache-path /Users/griffin/Projects/Nestory/build/ModuleCache.noindex -swift-version 6 -enforce-exclusivity\=checked -O -serialize-debugging-options -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/CasePathsMacros\#CasePathsMacros -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/ComposableArchitectureMacros\#ComposableArchitectureMacros -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/DependenciesMacrosPlugin\#DependenciesMacrosPlugin -load-plugin-executable /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release/PerceptionMacros\#PerceptionMacros -const-gather-protocols-file /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory_const_extract_protocols.json -enable-experimental-feature Macros -enable-upcoming-feature ExistentialAny -enable-experimental-feature DebugDescriptionMacro -empty-abi-descriptor -validate-clang-modules-once -clang-build-session-file /Users/griffin/Projects/Nestory/build/ModuleCache.noindex/Session.modulevalidation -Xcc -working-directory -Xcc /Users/griffin/Projects/Nestory -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift -file-compilation-dir /Users/griffin/Projects/Nestory -Xcc -fmodule-map-file\=/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/GeneratedModuleMaps-iphonesimulator/UIKitNavigationShim.modulemap -Xcc -ivfsstatcache -Xcc /Users/griffin/Projects/Nestory/build/SDKStatCaches.noindex/iphonesimulator18.5-22F76-d5fc8ad4295d2ef488fb7d0f804ce0c4.sdkstatcache -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/swift-overrides.hmap -Xcc -iquote -Xcc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-generated-files.hmap -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-own-target-headers.hmap -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-all-non-framework-target-headers.hmap -Xcc -ivfsoverlay -Xcc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory-d814d5eaa0ab5ce088e3156e1a6c6e78-VFS-iphonesimulator/all-product-headers.yaml -Xcc -iquote -Xcc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Nestory-project-headers.hmap -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-navigation/Sources/UIKitNavigationShim/include -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/include -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources-normal/arm64 -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources/arm64 -Xcc -I/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/DerivedSources -module-name Nestory -frontend-parseable-output -disable-clang-spi -target-sdk-version 18.5 -target-sdk-name iphonesimulator18.5 -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/lib/swift/host/plugins\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server -external-plugin-path /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/local/lib/swift/host/plugins\#/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/usr/bin/swift-plugin-server -in-process-plugin-server-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/libSwiftInProcPluginServer.dylib -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/host/plugins -plugin-path /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/local/lib/swift/host/plugins -enable-default-cmo -num-threads 10 -output-filelist /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/outputs-2 -index-unit-output-path-filelist /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/index-unit-outputs-2

CompileSwift normal arm64 (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:151:5: error: 'buildExpression' is unavailable: this expression does not conform to 'View'
    item.brand = "Apple"
    ^~~~
SwiftUICore.ViewBuilder.buildExpression:3:22: note: 'buildExpression' has been explicitly marked unavailable here
  public static func buildExpression(_ invalid: Any) -> some View
                     ^
/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:152:5: error: 'buildExpression' is unavailable: this expression does not conform to 'View'
    item.modelNumber = "MacBook Pro 16-inch"
    ^~~~
SwiftUICore.ViewBuilder.buildExpression:3:22: note: 'buildExpression' has been explicitly marked unavailable here
  public static func buildExpression(_ invalid: Any) -> some View
                     ^
/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:153:5: error: 'buildExpression' is unavailable: this expression does not conform to 'View'
    item.serialNumber = "ABC123DEF456"
    ^~~~
SwiftUICore.ViewBuilder.buildExpression:3:22: note: 'buildExpression' has been explicitly marked unavailable here
  public static func buildExpression(_ invalid: Any) -> some View
                     ^
/Users/griffin/Projects/Nestory/App-Main/ViewModels/AdvancedSearchViewModel.swift:43:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    private let inventoryService: InventoryService
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/App-Main/ViewModels/AdvancedSearchViewModel.swift:46:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    public init(inventoryService: InventoryService) {
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:47:17: error: cannot find 'SummaryCardsView' in scope
                SummaryCardsView(
                ^~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:56:17: error: cannot find 'SummaryCardsView' in scope
                SummaryCardsView(
                ^~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:53:27: error: cannot infer contextual base in reference to member 'horizontal'
                .padding(.horizontal)
                         ~^~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:140:27: error: cannot convert value of type 'Binding<Store<AlertState<Alert>, AnalyticsFeature.Action.Alert>?>' to expected argument type 'Binding<Store<AlertState<Alert>, Alert>?>'
            .alert($store.scope(state: \.alert, action: \.alert))
                          ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:140:27: note: arguments to generic parameter 'Action' ('AnalyticsFeature.Action.Alert' and 'Alert') are expected to be equal
            .alert($store.scope(state: \.alert, action: \.alert))
                          ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:258:24: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    case dataLoadError(Error)
                       ^~~~~
                       any Error
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: error: type '(_, _) -> _' cannot conform to 'Reducer'
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: note: only concrete types such as structs, enums and classes can conform to protocols
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-composable-architecture/Sources/ComposableArchitecture/Reducer/Reducers/Reduce.swift:28:10: note: required by initializer 'init(_:)' where 'some Reducer<State, Action>' = '(_, _) -> _'
  public init(_ reducer: some Reducer<State, Action>) {
         ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: error: initializer 'init(_:)' requires the types 'AnalyticsFeature.Action' and '((_, _) -> _).Action' be equivalent
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-composable-architecture/Sources/ComposableArchitecture/Reducer/Reducers/Reduce.swift:28:10: note: where 'Action' = 'AnalyticsFeature.Action', '(some Reducer<State, Action>).Action' = '((_, _) -> _).Action'
  public init(_ reducer: some Reducer<State, Action>) {
         ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: error: initializer 'init(_:)' requires the types 'AnalyticsFeature.State' and '((_, _) -> _).State' be equivalent
        Reduce { state, action in
        ^
/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/SourcePackages/checkouts/swift-composable-architecture/Sources/ComposableArchitecture/Reducer/Reducers/Reduce.swift:28:10: note: where 'State' = 'AnalyticsFeature.State', '(some Reducer<State, Action>).State' = '((_, _) -> _).State'
  public init(_ reducer: some Reducer<State, Action>) {
         ^
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:122:25: error: cannot infer contextual base in reference to member 'run'
                return .run { send in
                       ~^~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:124:33: error: cannot infer contextual base in reference to member 'loadAnalytics'
                    await send(.loadAnalytics)
                               ~^~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:317:46: error: generic parameter 'ElementOfResult' could not be inferred
    let categoryBreakdowns = itemsByCategory.compactMap { category, categoryItems in
                                             ^
Swift.Sequence.compactMap:2:24: note: in call to function 'compactMap'
@inlinable public func compactMap<ElementOfResult>(_ transform: (Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]}
                       ^
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:45:27: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case networkError(Error)
                          ^~~~~
                          any Error
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:46:28: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case decodingError(Error)
                           ^~~~~
                           any Error
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:269:15: warning: use of protocol 'Encodable' as a type must be written 'any Encodable'; this will be an error in a future Swift language mode
    let body: Encodable?
              ^~~~~~~~~
              (any Encodable)
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:275:15: warning: use of protocol 'Encodable' as a type must be written 'any Encodable'; this will be an error in a future Swift language mode
        body: Encodable? = nil
              ^~~~~~~~~
              (any Encodable)
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectClient.swift:197:24: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        var lastError: Error?
                       ^~~~~
                       (any Error)
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectOrchestrator.swift:63:21: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case failed(Error)
                    ^~~~~
                    any Error
/Users/griffin/Projects/Nestory/Services/AppStoreConnect/AppStoreConnectOrchestrator.swift:96:51: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @Published public private(set) var lastError: Error?
                                                  ^~~~~
                                                  (any Error)
/Users/griffin/Projects/Nestory/Services/ReceiptOCR/AppleFrameworksReceiptProcessor.swift:209:13: warning: initialization of immutable value 'fullRange' was never used; consider replacing with assignment to '_' or removing it
        let fullRange = NSRange(location: 0, length: text.count)
        ~~~~^~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/ReceiptOCR/AppleFrameworksReceiptProcessor.swift:266:14: warning: immutable value 'index' was never used; consider replacing with '_' or removing it
        for (index, line) in recognizedText.lines.enumerated() {
             ^~~~~
             _
/Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift:10:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift:10:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/BackupMetadata.swift:10:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:89:34: warning: no 'async' operations occur within 'await' expression
                let rawHeaders = await self.parseCSVLine(lines[0])
                                 ^
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:111:38: warning: no 'async' operations occur within 'await' expression
                        let values = await self.parseCSVLine(line)
                                     ^
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:122:44: warning: no 'async' operations occur within 'await' expression
                            let item = try await self.createItemFromCSVRow(headers: headers, values: values)
                                           ^
/Users/griffin/Projects/Nestory/Services/ImportExportService/CSVOperations.swift:147:23: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
                    } catch {
                      ^
/Users/griffin/Projects/Nestory/App-Main/BarcodeScannerViews/CameraScannerView.swift:10:18: warning: use of protocol 'BarcodeScannerService' as a type must be written 'any BarcodeScannerService'; this will be an error in a future Swift language mode
    let scanner: BarcodeScannerService
                 ^~~~~~~~~~~~~~~~~~~~~
                 any BarcodeScannerService
/Users/griffin/Projects/Nestory/Infrastructure/Camera/CameraScannerViewController.swift:13:25: warning: use of protocol 'BarcodeScannerService' as a type must be written 'any BarcodeScannerService'; this will be an error in a future Swift language mode
    public var scanner: BarcodeScannerService?
                        ^~~~~~~~~~~~~~~~~~~~~
                        (any BarcodeScannerService)
/Users/griffin/Projects/Nestory/Foundation/Models/Category.swift:74:36: warning: use of protocol 'Encoder' as a type must be written 'any Encoder'; this will be an error in a future Swift language mode
    public func encode(to encoder: Encoder) throws {
                                   ^~~~~~~
                                   any Encoder
/Users/griffin/Projects/Nestory/Foundation/Models/Category.swift:85:43: warning: use of protocol 'Decoder' as a type must be written 'any Decoder'; this will be an error in a future Swift language mode
    public convenience init(from decoder: Decoder) throws {
                                          ^~~~~~~
                                          any Decoder
/Users/griffin/Projects/Nestory/Services/ReceiptOCR/CategoryClassifier.swift:195:13: warning: initialization of immutable value 'textLength' was never used; consider replacing with assignment to '_' or removing it
        let textLength = text.count
        ~~~~^~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimDocumentProcessor.swift:61:13: warning: variable 'warranties' was never mutated; consider changing to 'let' constant
        var warranties: [Data] = []
        ~~~ ^
        let
/Users/griffin/Projects/Nestory/Services/ClaimDocumentProcessor.swift:62:16: warning: value 'warranty' was defined but never used; consider replacing with boolean test
        if let warranty = item.warranty {
           ~~~~^~~~~~~~~~~
                                        != nil
/Users/griffin/Projects/Nestory/Services/ClaimEmailService.swift:339:20: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
            error: Error?
                   ^~~~~
                   (any Error)
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportCore.swift:149:18: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        service: CloudStorageService
                 ^~~~~~~~~~~~~~~~~~~
                 any CloudStorageService
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:53: warning: left side of nil coalescing operator '??' has non-optional type 'Any', so the right side is never used
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~~~~~~~~~~~~~~~^~~~
                                                   
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:161:29: warning: expression implicitly coerced from 'String?' to 'Any'
                "category": item.category?.name ?? "",
                            ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:161:49: note: provide a default value to avoid this warning
                "category": item.category?.name ?? "",
                            ~~~~~~~~~~~~~~~~~~~~^~~~~
                                                      ?? <#default value#>
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:161:49: note: force-unwrap the value to avoid this warning
                "category": item.category?.name ?? "",
                            ~~~~~~~~~~~~~~~~~~~~^~~~~
                                                     !
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:161:49: note: explicitly cast to 'Any' with 'as Any' to silence this warning
                "category": item.category?.name ?? "",
                            ~~~~~~~~~~~~~~~~~~~~^~~~~
                                                      as Any
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:34: warning: expression implicitly coerced from 'Decimal?' to 'Any'
                "purchasePrice": item.purchasePrice ?? 0,
                                 ^~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:39: note: provide a default value to avoid this warning
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~^~~~~~~~~~~~~
                                                    ?? <#default value#>
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:39: note: force-unwrap the value to avoid this warning
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~^~~~~~~~~~~~~
                                                   !
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportFormatters.swift:162:39: note: explicitly cast to 'Any' with 'as Any' to silence this warning
                "purchasePrice": item.purchasePrice ?? 0,
                                 ~~~~~^~~~~~~~~~~~~
                                                    as Any
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:246:23: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    case networkError(Error)
                      ^~~~~
                      any Error
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:134:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:134:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:134:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/Services/ClaimExportService.swift:74:18: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        service: CloudStorageService
                 ^~~~~~~~~~~~~~~~~~~
                 any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimExportView.swift:276:21: warning: variable 'modifiedRequest' was never mutated; consider changing to 'let' constant
                var modifiedRequest = claim.request
                ~~~ ^
                let
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift:202:46: warning: left side of nil coalescing operator '??' has non-optional type 'String', so the right side is never used
            <p>\(request.incidentDescription ?? "No description provided")</p>
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                            
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift:230:34: error: value of type 'String' has no member 'name'
                <td>\(item.room?.name ?? "N/A")</td>
                      ~~~~~~~~~~ ^~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimJSONGenerator.swift:73:34: error: value of type 'String' has no member 'name'
            location: item.room?.name,
                      ~~~~~~~~~~ ^~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimPDFGenerator.swift:171:63: warning: left side of nil coalescing operator '??' has non-optional type 'String', so the right side is never used
        let incidentDescription = request.incidentDescription ?? "No description provided"
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                                             
/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:87:17: error: non-sendable parameter type 'ClaimPackageRequest' cannot be sent from caller of protocol requirement 'assemblePackage(request:)' into main actor-isolated implementation
    public func assemblePackage(request: ClaimPackageRequest) async throws -> ClaimPackage {
                ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:176:15: note: consider making struct 'ClaimPackageRequest' conform to the 'Sendable' protocol
public struct ClaimPackageRequest {
              ^
                                  : Sendable
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:24: error: missing argument label 'isExpanded:' in call
                Section("Incident Description", content: {
                       ^
                        isExpanded: 
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:25: error: cannot convert value of type 'String' to expected argument type 'Binding<Bool>'
                Section("Incident Description", content: {
                        ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:312:17: error: generic parameter 'V' could not be inferred
                Section("Media Inclusion", content: {
                ^
SwiftUI.Section.init:2:20: note: in call to initializer
nonisolated public init<V>(_ titleKey: LocalizedStringKey, @TableRowBuilder<V> content: () -> Content) where Parent == TableHeaderRowContent<V, Text>, Footer == EmptyTableRowContent<V>, V == Content.TableRowValue}
                   ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:33:35: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    private let assemblerService: ClaimPackageAssemblerService
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:36:33: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    public var assemblyService: ClaimPackageAssemblerService {
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyCore.swift:42:35: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    public init(assemblerService: ClaimPackageAssemblerService = LiveClaimPackageAssemblerService()) {
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                  any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:299:26: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
    let assemblyService: ClaimPackageAssemblerService
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:304:26: warning: use of protocol 'ClaimPackageAssemblerService' as a type must be written 'any ClaimPackageAssemblerService'; this will be an error in a future Swift language mode
        assemblyService: ClaimPackageAssemblerService,
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
                         any ClaimPackageAssemblerService
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:20: error: missing argument label 'isExpanded:' in call
            Section("Incident Details", content: {
                   ^
                    isExpanded: 
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:21: error: cannot convert value of type 'String' to expected argument type 'Binding<Bool>'
            Section("Incident Details", content: {
                    ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:20: error: missing argument label 'isExpanded:' in call
            Section("Documentation Level", content: {
                   ^
                    isExpanded: 
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:21: error: cannot convert value of type 'String' to expected argument type 'Binding<Bool>'
            Section("Documentation Level", content: {
                    ^
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:259:26: error: cannot use optional chaining on non-optional value of type '[Data]'
            !(item.photos?.isEmpty ?? true)
              ~~~~~~~~~~~^
                         
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:56: error: cannot find 'item' in scope
        let itemsWithPhotos = selectedItems.filter { !(item.photos?.isEmpty ?? true) }.count
                                                       ^~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:52: error: contextual type for closure argument list expects 1 argument, which cannot be implicitly ignored
        let itemsWithPhotos = selectedItems.filter { !(item.photos?.isEmpty ?? true) }.count
                                                   ^
                                                     _ in
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:284:44: error: cannot use optional chaining on non-optional value of type '[Data]'
        if selectedItems.filter({ $0.photos?.isEmpty ?? true }).count > 0 {
                                  ~~~~~~~~~^
                                           
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:337:45: error: value of type 'ClaimPackage' has no member 'itemCount'
                            Text("\(package.itemCount)")
                                    ~~~~~~~ ^~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:407:20: warning: value 'package' was defined but never used; consider replacing with boolean test
            if let package = generatedPackage {
               ~~~~^~~~~~~~~~
                                              != nil
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimSpreadsheetGenerator.swift:115:35: error: value of type 'String' has no member 'name'
        let location = item.room?.name ?? ""
                       ~~~~~~~~~~ ^~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:311:20: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    let services: [CloudStorageService]
                   ^~~~~~~~~~~~~~~~~~~
                   any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:312:26: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    let selectedService: CloudStorageService?
                         ^~~~~~~~~~~~~~~~~~~
                         (any CloudStorageService)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:313:20: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    let onSelect: (CloudStorageService) -> Void
                   ^~~~~~~~~~~~~~~~~~~
                   any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:315:28: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public init(services: [CloudStorageService], selectedService: CloudStorageService?, onSelect: @escaping (CloudStorageService) -> Void) {
                           ^~~~~~~~~~~~~~~~~~~
                           any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:315:67: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public init(services: [CloudStorageService], selectedService: CloudStorageService?, onSelect: @escaping (CloudStorageService) -> Void) {
                                                                  ^~~~~~~~~~~~~~~~~~~
                                                                  (any CloudStorageService)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionComponents.swift:315:110: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public init(services: [CloudStorageService], selectedService: CloudStorageService?, onSelect: @escaping (CloudStorageService) -> Void) {
                                                                                                             ^~~~~~~~~~~~~~~~~~~
                                                                                                             any CloudStorageService
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift:48:49: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    @Published public var selectedCloudService: CloudStorageService?
                                                ^~~~~~~~~~~~~~~~~~~
                                                (any CloudStorageService)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift:54:44: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @Published public var processingError: Error?
                                           ^~~~~
                                           (any Error)
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmission/ClaimSubmissionCore.swift:63:32: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    public var cloudServices: [CloudStorageService] {
                               ^~~~~~~~~~~~~~~~~~~
                               any CloudStorageService
/Users/griffin/Projects/Nestory/Services/ClaimValidationService.swift:30:54: error: static property 'standard' is internal and cannot be referenced from a default argument value
        requirements: ClaimValidationRequirements = .standard
                                                     ^
/Users/griffin/Projects/Nestory/Services/ClaimExport/ClaimExportModels.swift:227:16: note: static property 'standard' is not '@usableFromInline' or public
    static let standard = ClaimValidationRequirements(
               ^
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:39:21: error: cannot find 'ClaimSubmissionProgressIndicator' in scope
                    ClaimSubmissionProgressIndicator(currentStep: currentStep, totalSteps: 4)
                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:45:29: error: cannot find 'ClaimTypeSelectionStep' in scope
                            ClaimTypeSelectionStep(
                            ^~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:51:29: error: cannot find 'ItemSelectionStep' in scope
                            ItemSelectionStep(
                            ^~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:57:29: error: cannot find 'ContactInformationStep' in scope
                            ContactInformationStep(contactInfo: $contactInfo)
                            ^~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:59:29: error: cannot find 'ClaimReviewStep' in scope
                            ClaimReviewStep(
                            ^~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:122:17: error: cannot find 'ClaimEmailComposerView' in scope
                ClaimEmailComposerView(claimPackage: claimPackage)
                ^~~~~~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:177:36: error: type 'InsuranceCompany' has no member 'statefarm'
                insuranceCompany: .statefarm, // TODO: Make user selectable
                                  ~^~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:190:71: error: type 'any ClaimPackageAssemblerService' has no member 'shared'
            let claimPackage = try await ClaimPackageAssemblerService.shared.assemblePackage(request: claimRequest)
                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^~~~~~
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:21:38: warning: use of protocol 'NotificationService' as a type must be written 'any NotificationService'; this will be an error in a future Swift language mode
    private let notificationService: NotificationService?
                                     ^~~~~~~~~~~~~~~~~~~
                                     (any NotificationService)
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:23:66: warning: use of protocol 'NotificationService' as a type must be written 'any NotificationService'; this will be an error in a future Swift language mode
    public init(modelContext: ModelContext, notificationService: NotificationService? = nil) {
                                                                 ^~~~~~~~~~~~~~~~~~~
                                                                 (any NotificationService)
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:310:19: warning: value 'notificationService' was defined but never used; consider replacing with boolean test
        guard let notificationService else { return }
              ~~~~^
                                      != nil
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:316:13: warning: initialization of immutable value 'title' was never used; consider replacing with assignment to '_' or removing it
        let title = "Claim Status Update"
        ~~~~^~~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:317:13: warning: initialization of immutable value 'body' was never used; consider replacing with assignment to '_' or removing it
        let body = "Your \(claim.claimType.rawValue) claim status changed to \(newStatus.rawValue)"
        ~~~~^~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:329:19: warning: value 'notificationService' was defined but never used; consider replacing with boolean test
        guard let notificationService else { return }
              ~~~~^
                                      != nil
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:331:13: warning: initialization of immutable value 'title' was never used; consider replacing with assignment to '_' or removing it
        let title = "Claim Follow-up Due"
        ~~~~^~~~~
        _
/Users/griffin/Projects/Nestory/Services/ClaimTrackingService.swift:332:13: warning: initialization of immutable value 'body' was never used; consider replacing with assignment to '_' or removing it
        let body = followUp.actionDescription
        ~~~~^~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudBackupService/CloudKitBackupOperations.swift:74:55: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    ) async throws -> [(CKRecord.ID, Result<CKRecord, Error>)] {
                                                      ^~~~~
                                                      any Error
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:100:47: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
    @Published public var availableServices: [CloudStorageService] = []
                                              ^~~~~~~~~~~~~~~~~~~
                                              any CloudStorageService
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:119:20: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        _ service: CloudStorageService,
                   ^~~~~~~~~~~~~~~~~~~
                   any CloudStorageService
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:146:21: warning: use of protocol 'CloudStorageService' as a type must be written 'any CloudStorageService'; this will be an error in a future Swift language mode
        to service: CloudStorageService,
                    ^~~~~~~~~~~~~~~~~~~
                    any CloudStorageService
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:18:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://www.googleapis.com/upload/drive/v3/files"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:31:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://content.dropboxapi.com/2/files/upload"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:44:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://graph.microsoft.com/v1.0/me/drive/items/root:/\(fileName):/content"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:57:13: warning: initialization of immutable value 'uploadEndpoint' was never used; consider replacing with assignment to '_' or removing it
        let uploadEndpoint = "https://upload.box.com/api/2.0/files/content"
        ~~~~^~~~~~~~~~~~~~
        _
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:77:42: warning: use of 'CKRecordValue' (aka '__CKRecordObjCValue') as a type must be written 'any CKRecordValue' (aka 'any __CKRecordObjCValue'); this will be an error in a future Swift language mode
        record["fileName"] = fileName as CKRecordValue
                                         ^~~~~~~~~~~~~
                                         (any CKRecordValue)
/Users/griffin/Projects/Nestory/Services/CloudStorageServices.swift:78:42: warning: use of 'CKRecordValue' (aka '__CKRecordObjCValue') as a type must be written 'any CKRecordValue' (aka 'any __CKRecordObjCValue'); this will be an error in a future Swift language mode
        record["uploadDate"] = Date() as CKRecordValue
                                         ^~~~~~~~~~~~~
                                         (any CKRecordValue)
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:58:20: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:58:20: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:58:20: note: make the property mutable instead
        public let id = UUID()
               ~~~ ^
               var
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:71:20: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:71:20: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
        public let id = UUID()
                   ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:71:20: note: make the property mutable instead
        public let id = UUID()
               ~~~ ^
               var
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:10:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:10:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/CostEstimation.swift:10:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentReportView.swift:18:37: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @State private var reportError: Error?
                                    ^~~~~
                                    (any Error)
/Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentService.swift:31:38: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @Published public var lastError: Error?
                                     ^~~~~
                                     (any Error)
/Users/griffin/Projects/Nestory/Services/DamageAssessmentService/DamageAssessmentService.swift:166:9: warning: 'defer' statement at end of scope always executes immediately; replace with 'do' statement to silence this warning
        defer { isLoading = false }
        ^~~~~
        do
/Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentSteps.swift:195:83: error: missing argument for parameter #1 in call
                damageService: DamageAssessmentService(modelContext: ModelContext())
                                                                                  ^
                                                                                  <#ModelContainer#>
SwiftData.ModelContext.init:2:8: note: 'init(_:)' declared here
public init(_ container: ModelContainer)}
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:18:14: warning: @preconcurrency attribute on conformance to 'TestDependencyKey' has no effect
private enum InventoryServiceKey: @preconcurrency DependencyKey {
             ^                    ~~~~~~~~~~~~~~~~
                                  
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:140:14: warning: @preconcurrency attribute on conformance to 'DependencyKey' has no effect
private enum ReceiptOCRServiceKey: @preconcurrency DependencyKey {
             ^                     ~~~~~~~~~~~~~~~~
                                   
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:140:14: warning: @preconcurrency attribute on conformance to 'TestDependencyKey' has no effect
private enum ReceiptOCRServiceKey: @preconcurrency DependencyKey {
             ^                     ~~~~~~~~~~~~~~~~
                                   
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:669:10: error: method cannot be declared public because its result uses an internal type
    func loadHistory() async -> [SearchHistoryItem]
         ^                       ~~~~~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:480:8: note: type declared here
struct SearchHistoryItem: Equatable, Identifiable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:670:10: error: method cannot be declared public because its parameter uses an internal type
    func addToHistory(_ query: String, _ filters: SearchFilters) async
         ^                                        ~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:420:8: note: type declared here
struct SearchFilters: Equatable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:673:10: error: method cannot be declared public because its result uses an internal type
    func loadSavedSearches() async -> [SavedSearch]
         ^                             ~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:488:8: note: type declared here
struct SavedSearch: Equatable, Identifiable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:674:10: error: method cannot be declared public because its parameter uses an internal type
    func saveFavoriteSearch(_ savedSearch: SavedSearch) async
         ^                                 ~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Search/SearchFeature.swift:488:8: note: type declared here
struct SavedSearch: Equatable, Identifiable {
       ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:42:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveExportService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:43:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:102:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveNotificationService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:103:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:118:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveImportExportService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:119:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:142:9: error: call to main actor-isolated initializer 'init()' in a synchronous nonisolated context
        LiveReceiptOCRService()
        ^
/Users/griffin/Projects/Nestory/Services/ReceiptOCRService.swift:65:12: note: calls to initializer 'init()' from outside of its actor context are implicitly asynchronous
    public init() {
           ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:151:24: error: call to main actor-isolated initializer 'init()' in a synchronous nonisolated context
            return try LiveInsuranceReportService()
                       ^
/Users/griffin/Projects/Nestory/Services/InsuranceReportService.swift:68:12: note: calls to initializer 'init()' from outside of its actor context are implicitly asynchronous
    public init() {
           ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:151:20: warning: no calls to throwing functions occur within 'try' expression
            return try LiveInsuranceReportService()
                   ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:152:11: warning: 'catch' block is unreachable because no errors are thrown in 'do' block
        } catch {
          ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:305:24: error: extra argument 'tokenType' in call
            tokenType: "Bearer"
~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:527:13: error: argument 'items' must precede argument 'categories'
            items: [],
~~~~~~~~~~~~^~~~~~~~~
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: error: incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^                              ~~~~~~~~~~~
                                                                        generatedDate
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: error: missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^
/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:209:15: note: 'init(summary:content:generatedDate:policyHolder:policyNumber:)' declared here
public struct ClaimCoverLetter: Sendable {
              ^
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: error: incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^                              ~~~~~~~~~~~
                                                                        generatedDate
/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: error: missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call
            coverLetter: ClaimCoverLetter(content: "Mock cover letter", generatedAt: Date()),
                                         ^
/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:209:15: note: 'init(summary:content:generatedDate:policyHolder:policyNumber:)' declared here
public struct ClaimCoverLetter: Sendable {
              ^
/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/DocumentManagementView.swift:79:63: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func handleDocumentImport(_ result: Result<[URL], Error>) {
                                                              ^~~~~
                                                              any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:16:25: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    private let logger: FoundationLogger?
                        ^~~~~~~~~~~~~~~~
                        (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:20:26: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    private init(logger: FoundationLogger? = nil) {
                         ^~~~~~~~~~~~~~~~
                         (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:25:30: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func setLogger(_: FoundationLogger) {
                             ^~~~~~~~~~~~~~~~
                             any FoundationLogger
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:32:18: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        _ error: Error,
                 ^~~~~
                 any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:125:47: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func determineSeverity(for error: Error) -> LogSeverity {
                                              ^~~~~
                                              any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:151:23: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    public let error: Error
                      ^~~~~
                      any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:195:18: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        _ error: Error,
                 ^~~~~
                 any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:227:21: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        from error: Error,
                    ^~~~~
                    any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:253:43: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func generateTitle(for error: Error) -> String {
                                          ^~~~~
                                          any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:276:52: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func getUserFriendlyMessage(for error: Error, context: String?) -> String {
                                                   ^~~~~
                                                   any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:301:52: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func getRecoverySuggestions(for error: Error) -> [String] {
                                                   ^~~~~
                                                   any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:328:36: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func canRetry(_ error: Error) -> Bool {
                                   ^~~~~
                                   any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:336:47: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    private func determineSeverity(for error: Error) -> ErrorSeverity {
                                              ^~~~~
                                              any Error
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorLogger.swift:310:43: warning: use of protocol 'LocalizedError' as a type must be written 'any LocalizedError'; this will be an error in a future Swift language mode
        if let localizedError = error as? LocalizedError {
                                          ^~~~~~~~~~~~~~
                                          (any LocalizedError)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:15:52: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    func recover(from error: ServiceError, logger: FoundationLogger?) async throws
                                                   ^~~~~~~~~~~~~~~~
                                                   (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:18:74: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T
                                                                         ^~~~~~~~~~~~~~~~
                                                                         (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:29:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:57:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:87:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:108:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:128:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:157:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:183:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:207:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:236:30: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    private let strategies: [ErrorRecoveryStrategy]
                             ^~~~~~~~~~~~~~~~~~~~~
                             any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:238:30: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    public init(strategies: [ErrorRecoveryStrategy] = Self.defaultStrategies()) {
                             ^~~~~~~~~~~~~~~~~~~~~
                             any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:242:48: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    public static func defaultStrategies() -> [ErrorRecoveryStrategy] {
                                               ^~~~~~~~~~~~~~~~~~~~~
                                               any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:251:59: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func recover(from error: ServiceError, logger: FoundationLogger?) async throws {
                                                          ^~~~~~~~~~~~~~~~
                                                          (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:270:81: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    public func fallback<T>(for operationType: String, defaultValue: T, logger: FoundationLogger?) async -> T {
                                                                                ^~~~~~~~~~~~~~~~
                                                                                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:288:35: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
    private let recoveryStrategy: ErrorRecoveryStrategy
                                  ^~~~~~~~~~~~~~~~~~~~~
                                  any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:290:25: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
    private let logger: FoundationLogger?
                        ^~~~~~~~~~~~~~~~
                        (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:293:27: warning: use of protocol 'ErrorRecoveryStrategy' as a type must be written 'any ErrorRecoveryStrategy'; this will be an error in a future Swift language mode
        recoveryStrategy: ErrorRecoveryStrategy = CompositeRecoveryStrategy(),
                          ^~~~~~~~~~~~~~~~~~~~~
                          any ErrorRecoveryStrategy
/Users/griffin/Projects/Nestory/Foundation/Core/ErrorRecoveryStrategy.swift:295:17: warning: use of protocol 'FoundationLogger' as a type must be written 'any FoundationLogger'; this will be an error in a future Swift language mode
        logger: FoundationLogger? = nil
                ^~~~~~~~~~~~~~~~
                (any FoundationLogger)
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:11:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:11:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:11:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:47:16: warning: immutable property will not be decoded because it is declared with an initial value which cannot be overwritten
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:47:16: note: set the initial value via the initializer or explicitly define a CodingKeys enum including a 'id' case to silence this warning
    public let id = UUID()
               ^
/Users/griffin/Projects/Nestory/Foundation/Models/ExportTypes.swift:47:16: note: make the property mutable instead
    public let id = UUID()
           ~~~ ^
           var
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift:30:37: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @State private var reportError: Error?
                                    ^~~~~
                                    (any Error)
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift:103:47: error: argument passed to call that takes no arguments
            ClaimSubmissionView(modelContext: modelContext)
                               ~~~~~~~~~~~~~~~^~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:19: error: extra argument 'from' in call
            from: template,
~~~~~~~~~~~~~~~~~~^~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:27: error: missing argument for parameter 'template' in call
            from: template,
                          ^
                          , template: <#ClaimTemplate#>
/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator.swift:31:17: note: 'generateDocument(request:template:)' declared here
    public func generateDocument(
                ^
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:124:35: error: value of type 'ClaimTrackingService' has no member 'getStatus'
        try await trackingService.getStatus(for: claimId)
                  ~~~~~~~~~~~~~~~ ^~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:132:35: error: value of type 'ClaimTrackingService' has no member 'updateStatus'
        try await trackingService.updateStatus(
                  ~~~~~~~~~~~~~~~ ^~~~~~~~~~~~
/Users/griffin/Projects/Nestory/Services/InsuranceClaimService.swift:71:58: error: extra argument 'includePhotos' in call
        try await core.exportClaim(claim, includePhotos: includePhotos)
                                  ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift:402:20: warning: value 'claim' was defined but never used; consider replacing with boolean test
            if let claim = generatedClaim {
               ~~~~^~~~~~~~
                                          != nil
@__swiftmacro_7Nestory0029InsuranceClaimViewswift_tAFJhfMX560_0_33_4313E51CB80E133908053FBFEFA1302BLl7PreviewfMf_.swift:21:21: warning: initialization of immutable value 'context' was never used; consider replacing with assignment to '_' or removing it
                let context = ModelContext(container)
                    ^
/Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift:561:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/InsuranceClaimView.swift:561:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/InsuranceExportOptionsView.swift:21:37: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
    @State private var exportError: Error?
                                    ^~~~~
                                    (any Error)
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:13:33: warning: use of protocol 'InsuranceReportService' as a type must be written 'any InsuranceReportService'; this will be an error in a future Swift language mode
    let insuranceReportService: InsuranceReportService
                                ^~~~~~~~~~~~~~~~~~~~~~
                                any InsuranceReportService
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:28:73: warning: use of protocol 'InsuranceReportService' as a type must be written 'any InsuranceReportService'; this will be an error in a future Swift language mode
    init(items: [Item], categories: [Category], insuranceReportService: InsuranceReportService, isGenerating: Binding<Bool>) {
                                                                        ^~~~~~~~~~~~~~~~~~~~~~
                                                                        any InsuranceReportService
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:146:80: error: missing argument for parameter 'filename' in call
                let url = try await insuranceReportService.exportReport(pdfData)
                                                                               ^
                                                                               , filename: <#String#>
/Users/griffin/Projects/Nestory/Services/InsuranceReportService.swift:27:10: note: 'exportReport(_:filename:)' declared here
    func exportReport(
         ^
@__swiftmacro_7Nestory0037InsuranceReportOptionsViewswift_emGFlfMX159_0_33_7E7AB3158A065EF8A0D22E23DC1FA96DLl7PreviewfMf_.swift:22:45: warning: no calls to throwing functions occur within 'try' expression
                    insuranceReportService: try! LiveInsuranceReportService(),
                                            ^
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:160:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:160:1: note: in expansion of macro 'Preview' here
#Preview {
^~~~~~~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:32:19: error: method '==' must be declared public because it matches a requirement in public protocol 'Equatable'
    public struct State: Equatable {
                  ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:210:17: note: mark the operator function as 'public' to satisfy the requirement
    static func == (lhs: InventoryFeature.State, rhs: InventoryFeature.State) -> Bool {
                ^
    public 
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:74:30: warning: use of protocol 'Error' as a type must be written 'any Error'; this will be an error in a future Swift language mode
        case loadItemsFailed(Error)
                             ^~~~~
                             any Error
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:82:14: error: enum case in a public enum uses an internal type
        case path(StackAction<Path.State, Path.Action>)
             ^                ~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:86:12: note: type declared here
    struct Path {
           ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:209:35: error: redundant conformance of 'InventoryFeature.State' to protocol 'Equatable'
extension InventoryFeature.State: Equatable {
                                  ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:32:19: note: 'InventoryFeature.State' declares conformance to protocol 'Equatable' here
    public struct State: Equatable {
                  ^
@__swiftmacro_7Nestory16InventoryFeature7ReducerfMe_.swift:1:1: error: property 'body' must be declared public because it matches a requirement in public protocol 'Reducer'
extension InventoryFeature: ComposableArchitecture.Reducer {
^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:29:1: note: in expansion of macro 'Reducer' on struct 'InventoryFeature' here
@Reducer
^~~~~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:29:1: note: in expansion of macro 'Reducer' on struct 'InventoryFeature' here
@Reducer
^~~~~~~~
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:109:9: note: mark the property as 'public' to satisfy the requirement
    var body: some ReducerOf<Self> {
        ^
    public 
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:119:47: error: capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure
                        let items = try await inventoryService.fetchItems()
                                              ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:30:15: note: consider making struct 'InventoryFeature' conform to the 'Sendable' protocol
public struct InventoryFeature {
              ^
                               : Sendable
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:186:39: error: capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure
                            try await inventoryService.deleteItem(id: item.id)
                                      ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:30:15: note: consider making struct 'InventoryFeature' conform to the 'Sendable' protocol
public struct InventoryFeature {
              ^
                               : Sendable
/Users/griffin/Projects/Nestory/App-Main/ViewModels/InventoryListViewModel.swift:39:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    private let inventoryService: InventoryService
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/App-Main/ViewModels/InventoryListViewModel.swift:42:35: warning: use of protocol 'InventoryService' as a type must be written 'any InventoryService'; this will be an error in a future Swift language mode
    public init(inventoryService: InventoryService) {
                                  ^~~~~~~~~~~~~~~~
                                  any InventoryService
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:9: error: property 'body' must be declared public because it matches a requirement in public protocol 'View'
    var body: some View {
        ^
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:9: note: mark the property as 'public' to satisfy the requirement
    var body: some View {
        ^
    public 
/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:25: error: failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)
    var body: some View {
                        ^

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:151:5: 'buildExpression' is unavailable: this expression does not conform to 'View'

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:152:5: 'buildExpression' is unavailable: this expression does not conform to 'View'

/Users/griffin/Projects/Nestory/App-Main/WarrantyViews/WarrantyTrackingView.swift:153:5: 'buildExpression' is unavailable: this expression does not conform to 'View'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:47:17: Cannot find 'SummaryCardsView' in scope

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:56:17: Cannot find 'SummaryCardsView' in scope

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:53:27: Cannot infer contextual base in reference to member 'horizontal'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsDashboardView.swift:140:27: Cannot convert value of type 'Binding<Store<AlertState<Alert>, AnalyticsFeature.Action.Alert>?>' to expected argument type 'Binding<Store<AlertState<Alert>, Alert>?>'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: Type '(_, _) -> _' cannot conform to 'Reducer'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: Initializer 'init(_:)' requires the types 'AnalyticsFeature.Action' and '((_, _) -> _).Action' be equivalent

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:119:9: Initializer 'init(_:)' requires the types 'AnalyticsFeature.State' and '((_, _) -> _).State' be equivalent

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:122:25: Cannot infer contextual base in reference to member 'run'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:124:33: Cannot infer contextual base in reference to member 'loadAnalytics'

/Users/griffin/Projects/Nestory/Features/Analytics/AnalyticsFeature.swift:317:46: Generic parameter 'ElementOfResult' could not be inferred

/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimHTMLGenerator.swift:230:34: Value of type 'String' has no member 'name'

/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimJSONGenerator.swift:73:34: Value of type 'String' has no member 'name'

/Users/griffin/Projects/Nestory/Services/ClaimPackageAssemblerService.swift:87:17: Non-sendable parameter type 'ClaimPackageRequest' cannot be sent from caller of protocol requirement 'assemblePackage(request:)' into main actor-isolated implementation

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:24: Missing argument label 'isExpanded:' in call

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:253:25: Cannot convert value of type 'String' to expected argument type 'Binding<Bool>'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblyComponents.swift:312:17: Generic parameter 'V' could not be inferred

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:20: Missing argument label 'isExpanded:' in call

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:95:21: Cannot convert value of type 'String' to expected argument type 'Binding<Bool>'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:20: Missing argument label 'isExpanded:' in call

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:138:21: Cannot convert value of type 'String' to expected argument type 'Binding<Bool>'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:259:26: Cannot use optional chaining on non-optional value of type '[Data]'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:56: Cannot find 'item' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:264:52: Contextual type for closure argument list expects 1 argument, which cannot be implicitly ignored

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:284:44: Cannot use optional chaining on non-optional value of type '[Data]'

/Users/griffin/Projects/Nestory/App-Main/ClaimPackageAssemblyView/ClaimPackageAssemblySteps.swift:337:45: Value of type 'ClaimPackage' has no member 'itemCount'

/Users/griffin/Projects/Nestory/Services/InsuranceClaim/ClaimDocumentGenerator/ClaimSpreadsheetGenerator.swift:115:35: Value of type 'String' has no member 'name'

/Users/griffin/Projects/Nestory/Services/ClaimValidationService.swift:30:54: Static property 'standard' is internal and cannot be referenced from a default argument value

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:39:21: Cannot find 'ClaimSubmissionProgressIndicator' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:45:29: Cannot find 'ClaimTypeSelectionStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:51:29: Cannot find 'ItemSelectionStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:57:29: Cannot find 'ContactInformationStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:59:29: Cannot find 'ClaimReviewStep' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:122:17: Cannot find 'ClaimEmailComposerView' in scope

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:177:36: Type 'InsuranceCompany' has no member 'statefarm'

/Users/griffin/Projects/Nestory/App-Main/ClaimSubmissionView.swift:190:71: Type 'any ClaimPackageAssemblerService' has no member 'shared'

/Users/griffin/Projects/Nestory/App-Main/DamageAssessmentViews/DamageAssessmentSteps.swift:195:83: Missing argument for parameter #1 in call

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:669:10: Method cannot be declared public because its result uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:670:10: Method cannot be declared public because its parameter uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:673:10: Method cannot be declared public because its result uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:674:10: Method cannot be declared public because its parameter uses an internal type

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:142:9: Call to main actor-isolated initializer 'init()' in a synchronous nonisolated context

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:151:24: Call to main actor-isolated initializer 'init()' in a synchronous nonisolated context

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:305:24: Extra argument 'tokenType' in call

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:527:13: Argument 'items' must precede argument 'categories'

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: Incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:599:42: Missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: Incorrect argument label in call (have 'content:generatedAt:', expected 'content:generatedDate:')

/Users/griffin/Projects/Nestory/Services/DependencyKeys.swift:623:42: Missing arguments for parameters 'summary', 'policyHolder', 'policyNumber' in call

/Users/griffin/Projects/Nestory/App-Main/SettingsViews/ImportExportSettingsView.swift:103:47: Argument passed to call that takes no arguments

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:19: Extra argument 'from' in call

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:52:27: Missing argument for parameter 'template' in call

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:124:35: Value of type 'ClaimTrackingService' has no member 'getStatus'

/Users/griffin/Projects/Nestory/Services/InsuranceClaimCore.swift:132:35: Value of type 'ClaimTrackingService' has no member 'updateStatus'

/Users/griffin/Projects/Nestory/Services/InsuranceClaimService.swift:71:58: Extra argument 'includePhotos' in call

/Users/griffin/Projects/Nestory/App-Main/SettingsViews/InsuranceReportOptionsView.swift:146:80: Missing argument for parameter 'filename' in call

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:32:19: Method '==' must be declared public because it matches a requirement in public protocol 'Equatable'

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:82:14: Enum case in a public enum uses an internal type

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:209:35: Redundant conformance of 'InventoryFeature.State' to protocol 'Equatable'

/var/folders/m4/sgt6s6fj7f7_k04fg65_7k440000gn/T/swift-generated-sources/@__swiftmacro_7Nestory16InventoryFeature7ReducerfMe_.swift:1:1: Property 'body' must be declared public because it matches a requirement in public protocol 'Reducer'

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:119:47: Capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryFeature.swift:186:39: Capture of 'self' with non-sendable type 'InventoryFeature' in a '@Sendable' closure

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:9: Property 'body' must be declared public because it matches a requirement in public protocol 'View'

/Users/griffin/Projects/Nestory/Features/Inventory/InventoryView.swift:71:25: Failed to produce diagnostic for expression; please submit a bug report (https://swift.org/contributing/#reporting-bugs)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/arm64-apple-ios-simulator.abi.json /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.abi.json (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.abi.json /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/arm64-apple-ios-simulator.abi.json

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.abi.json): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.abi.json): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/arm64-apple-ios-simulator.swiftdoc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftdoc (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftdoc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/arm64-apple-ios-simulator.swiftdoc

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftdoc): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftdoc): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/arm64-apple-ios-simulator.swiftmodule /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftmodule (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftmodule /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/arm64-apple-ios-simulator.swiftmodule

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftmodule): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftmodule): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/Project/arm64-apple-ios-simulator.swiftsourceinfo /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftsourceinfo (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftsourceinfo /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/Project/arm64-apple-ios-simulator.swiftsourceinfo

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftsourceinfo): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/arm64/Nestory.swiftsourceinfo): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/x86_64-apple-ios-simulator.swiftmodule /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftmodule (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftmodule /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/x86_64-apple-ios-simulator.swiftmodule

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftmodule): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftmodule): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/x86_64-apple-ios-simulator.swiftdoc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftdoc (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftdoc /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/x86_64-apple-ios-simulator.swiftdoc

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftdoc): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftdoc): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/x86_64-apple-ios-simulator.abi.json /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.abi.json (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.abi.json /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/x86_64-apple-ios-simulator.abi.json

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.abi.json): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.abi.json): No such file or directory (2)

Copy /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/Project/x86_64-apple-ios-simulator.swiftsourceinfo /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftsourceinfo (in target 'Nestory' from project 'Nestory')
    cd /Users/griffin/Projects/Nestory
    builtin-copy -exclude .DS_Store -exclude CVS -exclude .svn -exclude .git -exclude .hg -resolve-src-symlinks -rename /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftsourceinfo /Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Products/Release-iphonesimulator/Nestory.swiftmodule/Project/x86_64-apple-ios-simulator.swiftsourceinfo

error: lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftsourceinfo): No such file or directory (2) (in target 'Nestory' from project 'Nestory')

lstat(/Users/griffin/Projects/Nestory/build/Nestory-acpgrflaeqlgurchgklavmiyxwpr/Build/Intermediates.noindex/Nestory.build/Release-iphonesimulator/Nestory.build/Objects-normal/x86_64/Nestory.swiftsourceinfo): No such file or directory (2)



Build failed    8/21/25, 11:18 PM    349.9 seconds
